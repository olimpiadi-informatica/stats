{"version":3,"file":"static/chunks/app/search/page-fa0408f10a9aa42f.js","mappings":"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","sources":["webpack://_N_E/?030f","webpack://_N_E/./components/region.tsx","webpack://_N_E/./components/task.tsx","webpack://_N_E/./app/search/search.tsx","webpack://_N_E/./app/search/page.tsx","webpack://_N_E/./components/contest.tsx","webpack://_N_E/./components/image.tsx","webpack://_N_E/./components/medal.tsx","webpack://_N_E/./components/placeholder.tsx","webpack://_N_E/./components/user.tsx","webpack://_N_E/./lib/utils.ts"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/stats/stats/frontend/app/search/page.tsx\");\n","import type { StaticImageData } from \"next/image\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport { Medals } from \"~/components/medal\";\nimport type { Region } from \"~/lib/region\";\nimport type { Regions } from \"~/lib/regions\";\nimport { round } from \"~/lib/utils\";\n\nexport function RegionCard({ region }: { region: Region | Regions[number] }) {\n  return (\n    <Card className=\"h-full\">\n      <RegionImage\n        region={region.name}\n        image={region.image}\n        className=\"size-52 flex-none max-sm:mx-auto max-sm:mt-4\"\n      />\n      <CardBody title={region.name}>\n        <div>\n          <span className=\"font-semibold\">Partecipanti:</span> {region.num_contestants}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Partecipanti medi all'anno:</span>{\" \"}\n          {round(region.avg_contestants_per_year)}\n        </div>\n        <div className=\"mt-2\">\n          <Medals {...region.medals} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function RegionYearCard({ region, year }: { region: Region; year: number }) {\n  const r = region.years.find((y) => y.year === year)!;\n  return (\n    <Card className=\"h-full\">\n      <RegionImage\n        region={region.name}\n        image={region.image}\n        className=\"size-52 flex-none max-sm:mx-auto max-sm:mt-4\"\n      />\n      <CardBody title={`${region.name} - ${year}`}>\n        <div>\n          <span className=\"font-semibold\">Partecipanti:</span> {r.num_contestants}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Medagliati:</span>{\" \"}\n          {round(\n            ((r.num_medals.gold + r.num_medals.silver + r.num_medals.bronze) / r.num_contestants) *\n              100,\n          )}\n          %\n        </div>\n        <div className=\"mt-2\">\n          <Medals {...r.num_medals} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function RegionImage({\n  region,\n  image,\n  className,\n}: {\n  region: string;\n  image: StaticImageData;\n  className?: string;\n}) {\n  return (\n    <Image src={image} alt={`Stemma ${region}`} className={clsx(\"object-contain p-4\", className)} />\n  );\n}\n","import type { StaticImageData } from \"next/image\";\nimport Link from \"next/link\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport type { Task } from \"~/lib/task\";\nimport type { Tasks } from \"~/lib/tasks\";\n\nexport function TaskCard({ task, links }: { task: Task | Tasks[number]; links?: boolean }) {\n  return (\n    <Card className=\"h-full\">\n      <TaskImage\n        name={task.name}\n        year={task.contest_year}\n        image={task.image}\n        className=\"w-52 flex-none max-sm:mx-auto max-sm:mt-4 max-sm:rounded-box sm:min-h-52\"\n      />\n      <CardBody title={task.title}>\n        <div>\n          <span className=\"font-semibold\">Anno:</span>{\" \"}\n          {links ? (\n            <Link href={`/contest/${task.contest_year}`} className=\"link\">\n              {task.contest_year}\n            </Link>\n          ) : (\n            task.contest_year\n          )}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio massimo:</span>{\" \"}\n          {task.max_score_possible ?? \"N/A\"}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio massimo totalizzato:</span>{\" \"}\n          {task.max_score ?? \"N/A\"}\n        </div>\n        {links && task.link && (\n          <div>\n            <Link href={task.link} className=\"link\">\n              Prova questo problema\n            </Link>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function TaskImage({\n  name,\n  year,\n  image,\n  className,\n}: {\n  name: string;\n  year: number;\n  image: StaticImageData | null;\n  className?: string;\n}) {\n  return image ? (\n    <div className={clsx(\"relative grid overflow-hidden\", className)}>\n      <Image src={image} alt=\"\" className=\"absolute inset-0 size-full object-cover max-sm:hidden\" />\n      <Image\n        src={image}\n        alt={`Problema ${name}`}\n        className=\"m-auto size-full object-contain sm:backdrop-blur-lg\"\n      />\n    </div>\n  ) : (\n    <div\n      className={clsx(\n        \"flex aspect-square items-center justify-center bg-neutral p-4 text-center text-5xl font-bold text-neutral-content\",\n        className,\n      )}>\n      OII {year}\n    </div>\n  );\n}\n","import Link from \"next/link\";\n\nimport { ContestCard } from \"~/components/contest\";\nimport { RegionCard } from \"~/components/region\";\nimport { TaskCard } from \"~/components/task\";\nimport { UserCard } from \"~/components/user\";\nimport type { SearchResultValue } from \"~/lib/search\";\n\nexport function SearchCard({ v }: { v: SearchResultValue }) {\n  if (\"contest\" in v) {\n    return (\n      <Link href={`/contest/${v.contest.year}`}>\n        <ContestCard contest={v.contest} />\n      </Link>\n    );\n  }\n  if (\"region\" in v) {\n    return (\n      <Link href={`/region/${v.region.id}`}>\n        <RegionCard region={v.region} />\n      </Link>\n    );\n  }\n  if (\"task\" in v) {\n    return (\n      <Link href={`/task/${v.task.year}/${v.task.task.name}`}>\n        <TaskCard task={v.task.task} />\n      </Link>\n    );\n  }\n  if (\"user\" in v) {\n    return (\n      <Link href={`/contestant/${v.user.contestant.id}`}>\n        <UserCard user={v.user} />\n      </Link>\n    );\n  }\n}\n","\"use client\";\n\nimport { useSearchParams } from \"next/navigation\";\nimport { Suspense, useMemo } from \"react\";\n\nimport { Form, SubmitButton, TextField } from \"@olinfo/react-components\";\nimport MiniSearch from \"minisearch\";\nimport useSWR from \"swr\";\n\nimport { Loading } from \"~/components/placeholder\";\n\nimport { SearchCard } from \"./search\";\n\nexport default function Page() {\n  return (\n    <>\n      <h1 className=\"my-4 text-center text-4xl font-bold max-lg:hidden\">Risultati ricerca</h1>\n      <h1 className=\"text-center text-2xl font-bold lg:hidden\">Ricerca</h1>\n      <Form onSubmit={searchAction} className=\"mb-4 lg:hidden\">\n        <TextField\n          field=\"q\"\n          label=\"Parola da cercare\"\n          placeholder=\"Inserisci la parola da cercare\"\n        />\n        <div className=\"self-start px-1 text-sm text-base-content/60\">\n          Puoi cercare un partecipante, un problema o una gara\n        </div>\n        <SubmitButton className=\"!mt-2\">Cerca</SubmitButton>\n      </Form>\n      <Suspense fallback={<Loading />}>\n        <PageInner />\n      </Suspense>\n    </>\n  );\n}\n\nfunction searchAction({ q }: { q: string }) {\n  window.history.pushState({}, \"\", `/search?q=${q}`);\n}\n\nfunction PageInner() {\n  const params = useSearchParams();\n\n  const { data: search } = useSWR(\"search-index\", fetcher, {\n    revalidateIfStale: false,\n    revalidateOnFocus: false,\n  });\n\n  const query = params.get(\"q\") ?? \"\";\n  const results = useMemo(\n    () => search?.search(query, { prefix: true, fuzzy: true }).slice(0, 20),\n    [search, query],\n  );\n\n  if (!query) {\n    return (\n      <div className=\"m-8 text-center text-2xl text-base-content/60 max-lg:hidden\">\n        Usa la barra di ricerca per trovare un partecipante, un problema o una gara\n      </div>\n    );\n  }\n  if (!results) return <Loading />;\n  if (results.length === 0) {\n    return <div className=\"m-8 text-center text-2xl\">Nessun risultato trovato</div>;\n  }\n\n  return (\n    <div className=\"grid gap-4 xl:grid-cols-2\">\n      {results?.map((result) => (\n        <SearchCard key={result.id} v={result.v} />\n      ))}\n    </div>\n  );\n}\n\nasync function fetcher() {\n  const res = await fetch(\"/api/search\");\n  const index = await res.text();\n  return MiniSearch.loadJSONAsync(index, { fields: [\"k\"], storeFields: [\"v\"] });\n}\n","import type { StaticImageData } from \"next/image\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport { Medals } from \"~/components/medal\";\nimport type { Contest } from \"~/lib/contests\";\nimport { round } from \"~/lib/utils\";\n\nexport function ContestCard({ contest }: { contest: Contest }) {\n  return (\n    <Card className=\"h-full\">\n      <ContestImage\n        year={contest.year}\n        image={contest.image}\n        className=\"w-52 flex-none max-sm:mx-auto max-sm:mt-4 max-sm:rounded-box sm:min-h-52\"\n      />\n      <CardBody title={`${contest.location.location ?? \"OII\"} ${contest.year}`}>\n        <div>\n          <span className=\"font-semibold\">Partecipanti:</span> {contest.num_contestants ?? \"N/A\"}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio massimo ottenuto:</span>{\" \"}\n          {contest.max_score ?? \"N/A\"}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio medio:</span> {round(contest.avg_score)}\n        </div>\n        <div className=\"mt-2\">\n          <Medals\n            gold={contest.medals.gold.count}\n            silver={contest.medals.silver.count}\n            bronze={contest.medals.bronze.count}\n          />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function ContestImage({\n  year,\n  image,\n  className,\n}: {\n  year: string | number;\n  image: StaticImageData | null;\n  className?: string;\n}) {\n  return image ? (\n    <Image\n      src={image}\n      alt={`Logo OII ${year}`}\n      className={clsx(\"bg-white p-4 sm:object-contain\", className)}\n    />\n  ) : (\n    <div\n      className={clsx(\n        \"flex aspect-square items-center justify-center bg-neutral p-4 text-center text-5xl font-bold text-neutral-content\",\n        className,\n      )}>\n      OII {year}\n    </div>\n  );\n}\n","import type { StaticImageData } from \"next/image\";\n\ntype Props = {\n  src: StaticImageData & { srcSet?: string };\n  alt: string;\n  className?: string;\n};\n\nexport function Image({ src, alt, className }: Props) {\n  return (\n    <img\n      src={src.src}\n      srcSet={src.srcSet}\n      width={src.width}\n      height={src.height}\n      alt={alt}\n      loading=\"lazy\"\n      className={className}\n    />\n  );\n}\n","import type { ReactNode } from \"react\";\n\nimport clsx from \"clsx\";\nimport { MedalIcon } from \"lucide-react\";\n\ntype MedalsProps = {\n  gold: ReactNode;\n  silver: ReactNode;\n  bronze: ReactNode;\n};\n\nexport function Medals({ gold, silver, bronze }: MedalsProps) {\n  return (\n    <div className=\"flex justify-center gap-4\">\n      <Medal type=\"gold\">{gold}</Medal>\n      <Medal type=\"silver\">{silver}</Medal>\n      <Medal type=\"bronze\">{bronze}</Medal>\n    </div>\n  );\n}\n\ntype MedalProps = {\n  type: string | null;\n  children: ReactNode;\n};\n\nexport function Medal({ type, children }: MedalProps) {\n  return (\n    <span>\n      <MedalIcon className={clsx(\"inline-block last:*:hidden\", color(type))} />\n      <span className=\"mx-1.5 inline-block\">{children ?? \"N/A\"}</span>\n    </span>\n  );\n}\n\nfunction color(type: string | null) {\n  switch (type) {\n    case \"gold\":\n      return \"stroke-amber-400\";\n    case \"silver\":\n      return \"stroke-gray-400\";\n    case \"bronze\":\n      return \"stroke-amber-600\";\n    default:\n      return \"hidden\";\n  }\n}\n","import { Card, CardBody } from \"@olinfo/react-components\";\n\nimport { Medals } from \"~/components/medal\";\n\nexport function CardPlaceholder() {\n  return (\n    <Card className=\"h-full\">\n      <div className=\"skeleton size-52 flex-none rounded-none max-sm:mx-auto max-sm:mt-4 max-sm:rounded-box\" />\n      <CardBody title={<span className=\"skeleton my-1 inline-block h-5 w-56\" />}>\n        <div className=\"skeleton my-1 h-4 w-48\" />\n        <div className=\"skeleton my-1 h-4 w-64\" />\n        <div className=\"mt-2\">\n          <Medals\n            gold={<span className=\"skeleton inline-block h-4 w-5 translate-y-1/4 scale-y-150\" />}\n            silver={<span className=\"skeleton inline-block h-4 w-5 translate-y-1/4 scale-y-150\" />}\n            bronze={<span className=\"skeleton inline-block h-4 w-5 translate-y-1/4 scale-y-150\" />}\n          />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function Loading() {\n  return (\n    <div className=\"grid gap-4 xl:grid-cols-2\">\n      <CardPlaceholder />\n      <CardPlaceholder />\n      <CardPlaceholder />\n      <CardPlaceholder />\n    </div>\n  );\n}\n","import type { StaticImageData } from \"next/image\";\nimport Link from \"next/link\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport { Medals } from \"~/components/medal\";\nimport type { Contestant } from \"~/lib/common\";\nimport type { User } from \"~/lib/user\";\nimport type { Users } from \"~/lib/users\";\n\nexport function UserCard({ user, links }: { user: User | Users[number]; links?: boolean }) {\n  return (\n    <Card className=\"h-full\">\n      <div className=\"relative min-h-52 w-52 self-stretch max-sm:mx-auto max-sm:mt-4\">\n        <ContestantImage\n          contestant={user.contestant}\n          image={user.image}\n          className=\"absolute inset-0 size-full max-sm:rounded-box\"\n        />\n      </div>\n      <CardBody title={`${user.contestant.first_name ?? \"\"} ${user.contestant.last_name}`}>\n        <div>\n          <span className=\"font-semibold\">Partecipazioni:</span>{\" \"}\n          {user.participations.map((p) => p.year).join(\", \")}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Miglior piazzamento:</span> {user.best_rank ?? \"N/A\"}°\n          posto\n        </div>\n        {links && user.contestant.username && (\n          <div>\n            <span className=\"font-semibold\">Profilo su training.olinfo.it:</span>{\" \"}\n            <Link\n              href={`https://training.olinfo.it/user/${user.contestant.username}/profile`}\n              className=\"link\">\n              {user.contestant.username}\n            </Link>\n          </div>\n        )}\n        <div className=\"mt-2\">\n          <Medals {...user.num_medals} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function ContestantImage({\n  contestant,\n  image,\n  className,\n}: {\n  contestant: Contestant;\n  image: StaticImageData | null;\n  className?: string;\n}) {\n  return image ? (\n    <Image\n      src={image}\n      alt={`Foto di ${contestant.first_name ?? \"\"} ${contestant.last_name}`}\n      className={clsx(\"object-cover\", className)}\n    />\n  ) : (\n    <div\n      className={clsx(\n        \"flex items-center justify-center bg-neutral p-4 text-7xl font-bold text-neutral-content\",\n        className,\n      )}>\n      {(contestant.first_name?.[0] ?? \"\") + contestant.last_name[0]}\n    </div>\n  );\n}\n","export function round(value: number | null) {\n  return value === null ? \"N/A\" : Math.round(value * 10) / 10;\n}\n"],"names":["Promise","resolve","then","__webpack_require__","bind","RegionCard","param","region","jsx_runtime","jsxs","Card","className","jsx","RegionImage","name","image","CardBody","title","div","span","num_contestants","round","avg_contestants_per_year","Medals","medals","Image","src","alt","concat","clsx","TaskCard","task","links","TaskImage","year","contest_year","Link","href","max_score_possible","max_score","link","SearchCard","v","contest","ContestCard","id","user","contestant","UserCard","Page","Fragment","h1","Form","onSubmit","searchAction","TextField","field","label","placeholder","SubmitButton","Suspense","fallback","Loading","PageInner","q","window","history","pushState","params","useSearchParams","data","search","useSWR","fetcher","revalidateIfStale","revalidateOnFocus","query","get","results","useMemo","prefix","fuzzy","slice","length","map","result","res","fetch","index","text","MiniSearch","loadJSONAsync","fields","storeFields","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","ContestImage","location","avg_score","gold","count","silver","bronze","img","srcSet","width","height","loading","Medal","type","children","MedalIcon","color","CardPlaceholder","ContestantImage","first_name","last_name","participations","p","join","best_rank","username","num_medals","value","Math"],"sourceRoot":""}