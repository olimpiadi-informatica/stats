{"version":3,"file":"static/chunks/app/search/page-d0aa1bd2b6ef4c88.js","mappings":"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","sources":["webpack://_N_E/?d110","webpack://_N_E/./components/region.tsx","webpack://_N_E/./components/task.tsx","webpack://_N_E/./app/search/search.tsx","webpack://_N_E/./app/search/page.tsx","webpack://_N_E/./lib/utils.ts","webpack://_N_E/./components/contest.tsx","webpack://_N_E/./components/image.tsx","webpack://_N_E/./components/medal.tsx","webpack://_N_E/./components/placeholder.tsx","webpack://_N_E/./components/user.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/oii-stats/oii-stats/frontend/app/search/page.tsx\");\n","import type { StaticImageData } from \"next/image\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport { Medals } from \"~/components/medal\";\nimport type { Region } from \"~/lib/region\";\nimport type { Regions } from \"~/lib/regions\";\nimport { round } from \"~/lib/utils\";\n\nexport function RegionCard({ region }: { region: Region | Regions[number] }) {\n  return (\n    <Card className=\"h-full\">\n      <RegionImage\n        region={region.name}\n        image={region.image}\n        className=\"size-52 flex-none max-sm:mx-auto max-sm:mt-4\"\n      />\n      <CardBody title={region.name}>\n        <div>\n          <span className=\"font-semibold\">Partecipanti:</span> {region.num_contestants}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Partecipanti medi all'anno:</span>{\" \"}\n          {region.avg_contestants_per_year}\n        </div>\n        <div className=\"mt-2\">\n          <Medals {...region.medals} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function RegionYearCard({ region, year }: { region: Region; year: number }) {\n  const r = region.years.find((y) => y.year === year)!;\n  return (\n    <Card className=\"h-full\">\n      <RegionImage\n        region={region.name}\n        image={region.image}\n        className=\"size-52 flex-none max-sm:mx-auto max-sm:mt-4\"\n      />\n      <CardBody title={`${region.name} - ${year}`}>\n        <div>\n          <span className=\"font-semibold\">Partecipanti:</span> {r.num_contestants}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Medagliati:</span>{\" \"}\n          {round(\n            ((r.num_medals.gold + r.num_medals.silver + r.num_medals.bronze) / r.num_contestants) *\n              100,\n          )}\n          %\n        </div>\n        <div className=\"mt-2\">\n          <Medals {...r.num_medals} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function RegionImage({\n  region,\n  image,\n  className,\n}: {\n  region: string;\n  image: StaticImageData;\n  className?: string;\n}) {\n  return (\n    <Image src={image} alt={`Stemma ${region}`} className={clsx(\"object-contain p-4\", className)} />\n  );\n}\n","import type { StaticImageData } from \"next/image\";\nimport Link from \"next/link\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport type { Task } from \"~/lib/task\";\nimport type { Tasks } from \"~/lib/tasks\";\n\nexport function TaskCard({ task, links }: { task: Task | Tasks[number]; links?: boolean }) {\n  return (\n    <Card className=\"h-full\">\n      <TaskImage\n        name={task.name}\n        year={task.contest_year}\n        image={task.image}\n        className=\"w-52 flex-none max-sm:mx-auto max-sm:mt-4 max-sm:rounded-box sm:min-h-52\"\n      />\n      <CardBody title={task.title}>\n        <div>\n          <span className=\"font-semibold\">Anno:</span>{\" \"}\n          {links ? (\n            <Link href={`/contest/${task.contest_year}`} className=\"link\">\n              {task.contest_year}\n            </Link>\n          ) : (\n            task.contest_year\n          )}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio massimo:</span>{\" \"}\n          {task.max_score_possible ?? \"N/A\"}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio massimo totalizzato:</span>{\" \"}\n          {task.max_score ?? \"N/A\"}\n        </div>\n        {links && task.link && (\n          <div>\n            <Link href={task.link} className=\"link\">\n              Prova questo problema\n            </Link>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function TaskImage({\n  name,\n  year,\n  image,\n  className,\n}: {\n  name: string;\n  year: number;\n  image: StaticImageData | null;\n  className?: string;\n}) {\n  return image ? (\n    <div className={clsx(\"relative grid overflow-hidden\", className)}>\n      <Image src={image} alt=\"\" className=\"absolute inset-0 size-full object-cover max-sm:hidden\" />\n      <Image\n        src={image}\n        alt={`Problema ${name}`}\n        className=\"m-auto size-full object-contain sm:backdrop-blur-lg\"\n      />\n    </div>\n  ) : (\n    <div\n      className={clsx(\n        \"flex aspect-square items-center justify-center bg-neutral p-4 text-center text-5xl font-bold text-neutral-content\",\n        className,\n      )}>\n      OII {year}\n    </div>\n  );\n}\n","import Link from \"next/link\";\n\nimport { ContestCard } from \"~/components/contest\";\nimport { RegionCard } from \"~/components/region\";\nimport { TaskCard } from \"~/components/task\";\nimport { UserCard } from \"~/components/user\";\nimport type { SearchResultValue } from \"~/lib/search\";\n\nexport function SearchCard({ v }: { v: SearchResultValue }) {\n  if (\"contest\" in v) {\n    return (\n      <Link href={`/contest/${v.contest.year}`}>\n        <ContestCard contest={v.contest} />\n      </Link>\n    );\n  }\n  if (\"region\" in v) {\n    return (\n      <Link href={`/region/${v.region.id}`}>\n        <RegionCard region={v.region} />\n      </Link>\n    );\n  }\n  if (\"task\" in v) {\n    return (\n      <Link href={`/task/${v.task.year}/${v.task.task.name}`}>\n        <TaskCard task={v.task.task} />\n      </Link>\n    );\n  }\n  if (\"user\" in v) {\n    return (\n      <Link href={`/contestant/${v.user.contestant.id}`}>\n        <UserCard user={v.user} />\n      </Link>\n    );\n  }\n}\n","\"use client\";\n\nimport { useSearchParams } from \"next/navigation\";\nimport { Suspense, useMemo } from \"react\";\n\nimport { Form, SubmitButton, TextField } from \"@olinfo/react-components\";\nimport MiniSearch from \"minisearch\";\nimport useSWR from \"swr\";\n\nimport { Loading } from \"~/components/placeholder\";\n\nimport { SearchCard } from \"./search\";\n\nexport default function Page() {\n  return (\n    <>\n      <h1 className=\"my-4 text-center text-4xl font-bold max-lg:hidden\">Risultati ricerca</h1>\n      <h1 className=\"text-center text-2xl font-bold lg:hidden\">Ricerca</h1>\n      <Form onSubmit={searchAction} className=\"mb-4 lg:hidden\">\n        <TextField\n          field=\"q\"\n          label=\"Parola da cercare\"\n          placeholder=\"Inserisci la parola da cercare\"\n        />\n        <div className=\"self-start px-1 text-sm text-base-content/60\">\n          Puoi cercare un partecipante, un problema o una gara\n        </div>\n        <SubmitButton className=\"!mt-2\">Cerca</SubmitButton>\n      </Form>\n      <Suspense fallback={<Loading />}>\n        <PageInner />\n      </Suspense>\n    </>\n  );\n}\n\nfunction searchAction({ q }: { q: string }) {\n  window.history.pushState({}, \"\", `/search?q=${q}`);\n}\n\nfunction PageInner() {\n  const params = useSearchParams();\n\n  const { data: search } = useSWR(\"search-index\", fetcher, {\n    revalidateIfStale: false,\n    revalidateOnFocus: false,\n  });\n\n  const query = params.get(\"q\") ?? \"\";\n  const results = useMemo(\n    () => search?.search(query, { prefix: true, fuzzy: true }).slice(0, 20),\n    [search, query],\n  );\n\n  if (!query) {\n    return (\n      <div className=\"m-8 text-center text-2xl text-base-content/60 max-lg:hidden\">\n        Usa la barra di ricerca per trovare un partecipante, un problema o una gara\n      </div>\n    );\n  }\n  if (!results) return <Loading />;\n  if (results.length === 0) {\n    return <div className=\"m-8 text-center text-2xl\">Nessun risultato trovato</div>;\n  }\n\n  return (\n    <div className=\"grid gap-4 xl:grid-cols-2\">\n      {results?.map((result) => (\n        <SearchCard key={result.id} v={result.v} />\n      ))}\n    </div>\n  );\n}\n\nasync function fetcher() {\n  const res = await fetch(\"/api/search\");\n  const index = await res.text();\n  return MiniSearch.loadJSONAsync(index, { fields: [\"k\"], storeFields: [\"v\"] });\n}\n","export function round(value: number | null) {\n  return value === null ? \"N/A\" : Math.round(value * 10) / 10;\n}\n","import type { StaticImageData } from \"next/image\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport { Medals } from \"~/components/medal\";\nimport type { Contest } from \"~/lib/contests\";\nimport { round } from \"~/lib/utils\";\n\nexport function ContestCard({ contest }: { contest: Contest }) {\n  return (\n    <Card className=\"h-full\">\n      <ContestImage\n        year={contest.year}\n        image={contest.image}\n        className=\"w-52 flex-none max-sm:mx-auto max-sm:mt-4 max-sm:rounded-box sm:min-h-52\"\n      />\n      <CardBody title={`${contest.location.location ?? \"OII\"} ${contest.year}`}>\n        <div>\n          <span className=\"font-semibold\">Partecipanti:</span> {contest.num_contestants ?? \"N/A\"}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio massimo ottenuto:</span>{\" \"}\n          {contest.max_score ?? \"N/A\"}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Punteggio medio:</span> {round(contest.avg_score)}\n        </div>\n        <div className=\"mt-2\">\n          <Medals\n            gold={contest.medals.gold.count}\n            silver={contest.medals.silver.count}\n            bronze={contest.medals.bronze.count}\n          />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function ContestImage({\n  year,\n  image,\n  className,\n}: {\n  year: string | number;\n  image: StaticImageData | null;\n  className?: string;\n}) {\n  return image ? (\n    <Image\n      src={image}\n      alt={`Logo OII ${year}`}\n      className={clsx(\"bg-white p-4 sm:object-contain\", className)}\n    />\n  ) : (\n    <div\n      className={clsx(\n        \"flex aspect-square items-center justify-center bg-neutral p-4 text-center text-5xl font-bold text-neutral-content\",\n        className,\n      )}>\n      OII {year}\n    </div>\n  );\n}\n","import type { StaticImageData } from \"next/image\";\n\ntype Props = {\n  src: StaticImageData & { srcSet?: string };\n  alt: string;\n  className?: string;\n};\n\nexport function Image({ src, alt, className }: Props) {\n  return (\n    <img\n      src={src.src}\n      srcSet={src.srcSet}\n      width={src.width}\n      height={src.height}\n      alt={alt}\n      loading=\"lazy\"\n      className={className}\n    />\n  );\n}\n","import type { ReactNode } from \"react\";\n\nimport clsx from \"clsx\";\nimport { MedalIcon } from \"lucide-react\";\n\ntype MedalsProps = {\n  gold: ReactNode;\n  silver: ReactNode;\n  bronze: ReactNode;\n};\n\nexport function Medals({ gold, silver, bronze }: MedalsProps) {\n  return (\n    <div className=\"flex justify-center gap-4\">\n      <Medal type=\"gold\">{gold}</Medal>\n      <Medal type=\"silver\">{silver}</Medal>\n      <Medal type=\"bronze\">{bronze}</Medal>\n    </div>\n  );\n}\n\ntype MedalProps = {\n  type: string | null;\n  children: ReactNode;\n};\n\nexport function Medal({ type, children }: MedalProps) {\n  return (\n    <span>\n      <MedalIcon className={clsx(\"inline-block last:*:hidden\", color(type))} />\n      <span className=\"mx-1.5 inline-block\">{children ?? \"N/A\"}</span>\n    </span>\n  );\n}\n\nfunction color(type: string | null) {\n  switch (type) {\n    case \"gold\":\n      return \"stroke-amber-400\";\n    case \"silver\":\n      return \"stroke-gray-400\";\n    case \"bronze\":\n      return \"stroke-amber-600\";\n    default:\n      return \"hidden\";\n  }\n}\n","import { Card, CardBody } from \"@olinfo/react-components\";\n\nimport { Medals } from \"~/components/medal\";\n\nexport function CardPlaceholder() {\n  return (\n    <Card className=\"h-full\">\n      <div className=\"skeleton size-52 flex-none rounded-none max-sm:mx-auto max-sm:mt-4 max-sm:rounded-box\" />\n      <CardBody title={<span className=\"skeleton my-1 inline-block h-5 w-56\" />}>\n        <div className=\"skeleton my-1 h-4 w-48\" />\n        <div className=\"skeleton my-1 h-4 w-64\" />\n        <div className=\"mt-2\">\n          <Medals\n            gold={<span className=\"skeleton inline-block h-4 w-5 translate-y-1/4 scale-y-150\" />}\n            silver={<span className=\"skeleton inline-block h-4 w-5 translate-y-1/4 scale-y-150\" />}\n            bronze={<span className=\"skeleton inline-block h-4 w-5 translate-y-1/4 scale-y-150\" />}\n          />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function Loading() {\n  return (\n    <div className=\"grid gap-4 xl:grid-cols-2\">\n      <CardPlaceholder />\n      <CardPlaceholder />\n      <CardPlaceholder />\n      <CardPlaceholder />\n    </div>\n  );\n}\n","import type { StaticImageData } from \"next/image\";\nimport Link from \"next/link\";\n\nimport { Card, CardBody } from \"@olinfo/react-components\";\nimport clsx from \"clsx\";\n\nimport { Image } from \"~/components/image\";\nimport { Medals } from \"~/components/medal\";\nimport type { Contestant } from \"~/lib/common\";\nimport type { User } from \"~/lib/user\";\nimport type { Users } from \"~/lib/users\";\n\nexport function UserCard({ user, links }: { user: User | Users[number]; links?: boolean }) {\n  return (\n    <Card className=\"h-full\">\n      <div className=\"relative min-h-52 w-52 self-stretch max-sm:mx-auto max-sm:mt-4\">\n        <ContestantImage\n          contestant={user.contestant}\n          image={user.image}\n          className=\"absolute inset-0 size-full max-sm:rounded-box\"\n        />\n      </div>\n      <CardBody title={`${user.contestant.first_name ?? \"\"} ${user.contestant.last_name}`}>\n        <div>\n          <span className=\"font-semibold\">Partecipazioni:</span>{\" \"}\n          {user.participations.map((p) => p.year).join(\", \")}\n        </div>\n        <div>\n          <span className=\"font-semibold\">Miglior piazzamento:</span> {user.best_rank ?? \"N/A\"}°\n          posto\n        </div>\n        {links && user.contestant.username && (\n          <div>\n            <span className=\"font-semibold\">Profilo su training.olinfo.it:</span>{\" \"}\n            <Link\n              href={`https://training.olinfo.it/#/user/${user.contestant.username}/profile`}\n              className=\"link\">\n              {user.contestant.username}\n            </Link>\n          </div>\n        )}\n        <div className=\"mt-2\">\n          <Medals {...user.num_medals} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport function ContestantImage({\n  contestant,\n  image,\n  className,\n}: {\n  contestant: Contestant;\n  image: StaticImageData | null;\n  className?: string;\n}) {\n  return image ? (\n    <Image\n      src={image}\n      alt={`Foto di ${contestant.first_name ?? \"\"} ${contestant.last_name}`}\n      className={clsx(\"object-cover\", className)}\n    />\n  ) : (\n    <div\n      className={clsx(\n        \"flex items-center justify-center bg-neutral p-4 text-7xl font-bold text-neutral-content\",\n        className,\n      )}>\n      {(contestant.first_name?.[0] ?? \"\") + contestant.last_name[0]}\n    </div>\n  );\n}\n"],"names":["Promise","resolve","then","__webpack_require__","bind","RegionCard","param","region","jsx_runtime","jsxs","Card","className","jsx","RegionImage","name","image","CardBody","title","div","span","num_contestants","avg_contestants_per_year","Medals","medals","Image","src","alt","concat","clsx","TaskCard","task","links","TaskImage","year","contest_year","Link","href","max_score_possible","max_score","link","SearchCard","v","contest","ContestCard","id","user","contestant","UserCard","Page","Fragment","h1","Form","onSubmit","searchAction","TextField","field","label","placeholder","SubmitButton","Suspense","fallback","Loading","PageInner","q","window","history","pushState","params","useSearchParams","data","search","useSWR","fetcher","revalidateIfStale","revalidateOnFocus","query","get","results","useMemo","prefix","fuzzy","slice","length","map","result","res","fetch","index","text","MiniSearch","loadJSONAsync","fields","storeFields","value","ContestImage","location","avg_score","Math","round","gold","count","silver","bronze","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","img","srcSet","width","height","loading","Medal","type","children","MedalIcon","color","CardPlaceholder","ContestantImage","first_name","last_name","participations","p","join","best_rank","username","num_medals"],"sourceRoot":""}