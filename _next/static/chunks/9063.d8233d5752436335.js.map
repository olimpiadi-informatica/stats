{"version":3,"file":"static/chunks/9063.d8233d5752436335.js","mappings":"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","sources":["webpack://_N_E/./node_modules/shiki/dist/langs/lua.mjs","webpack://_N_E/./node_modules/shiki/dist/langs/ruby.mjs","webpack://_N_E/./node_modules/shiki/dist/langs/xml.mjs"],"sourcesContent":["import c from './c.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Lua\", \"name\": \"lua\", \"patterns\": [{ \"begin\": \"\\\\b(?:(local)\\\\s+)?(function)\\\\b(?![,:])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.local.lua\" }, \"2\": { \"name\": \"keyword.control.lua\" } }, \"end\": `(?<=[)\\\\-{}\\\\[\\\\]\"'])`, \"name\": \"meta.function.lua\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.begin.lua\" } }, \"end\": `(\\\\))|(?=[\\\\-\\\\.{}\\\\[\\\\]\"'])`, \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.finish.lua\" } }, \"name\": \"meta.parameter.lua\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"[a-zA-Z_]\\\\w*\", \"name\": \"variable.parameter.function.lua\" }, { \"match\": \",\", \"name\": \"punctuation.separator.arguments.lua\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.arguments.lua\" } }, \"end\": \"(?=[),])\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }] }] }, { \"match\": \"\\\\b([a-zA-Z_]\\\\w*)\\\\b\\\\s*(?=:)\", \"name\": \"entity.name.class.lua\" }, { \"match\": \"\\\\b([a-zA-Z_]\\\\w*)\\\\b\", \"name\": \"entity.name.function.lua\" }] }, { \"match\": \"(?<![\\\\w\\\\d.])0[xX][0-9A-Fa-f]+(\\\\.[0-9A-Fa-f]*)?([eE]-?\\\\d*)?([pP][-+]\\\\d+)?\", \"name\": \"constant.numeric.float.hexadecimal.lua\" }, { \"match\": \"(?<![\\\\w\\\\d.])0[xX]\\\\.[0-9A-Fa-f]+([eE]-?\\\\d*)?([pP][-+]\\\\d+)?\", \"name\": \"constant.numeric.float.hexadecimal.lua\" }, { \"match\": \"(?<![\\\\w\\\\d.])0[xX][0-9A-Fa-f]+(?![pPeE.0-9])\", \"name\": \"constant.numeric.integer.hexadecimal.lua\" }, { \"match\": \"(?<![\\\\w\\\\d.])\\\\d+(\\\\.\\\\d*)?([eE]-?\\\\d*)?\", \"name\": \"constant.numeric.float.lua\" }, { \"match\": \"(?<![\\\\w\\\\d.])\\\\.\\\\d+([eE]-?\\\\d*)?\", \"name\": \"constant.numeric.float.lua\" }, { \"match\": \"(?<![\\\\w\\\\d.])\\\\d+(?![pPeE.0-9])\", \"name\": \"constant.numeric.integer.lua\" }, { \"include\": \"#string\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.lua\" } }, \"match\": \"\\\\A(#!).*$\\\\n?\", \"name\": \"comment.line.shebang.lua\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.goto.lua\" }, \"2\": { \"name\": \"string.tag.lua\" } }, \"match\": \"\\\\b(goto)\\\\s+([a-zA-Z_]\\\\w*)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.embedded.begin.lua\" }, \"2\": { \"name\": \"punctuation.section.embedded.end.lua\" } }, \"match\": \"(::)\\\\s*[a-zA-Z_]\\\\w*\\\\s*(::)\", \"name\": \"string.tag.lua\" }, { \"captures\": { \"0\": { \"name\": \"storage.type.attribute.lua\" } }, \"match\": \"<\\\\s*(const|close)\\\\s*>\" }, { \"match\": \"<[a-zA-Z_\\\\*][a-zA-Z0-9_\\\\.\\\\*\\\\-]*>\", \"name\": \"storage.type.generic.lua\" }, { \"match\": \"\\\\b(break|do|else|for|if|elseif|goto|return|then|repeat|while|until|end|in)\\\\b\", \"name\": \"keyword.control.lua\" }, { \"match\": \"\\\\b(local)\\\\b\", \"name\": \"keyword.local.lua\" }, { \"match\": \"\\\\b(function)\\\\b(?![,:])\", \"name\": \"keyword.control.lua\" }, { \"match\": \"(?<![^.]\\\\.|:)\\\\b(false|nil(?!:)|true|_ENV|_G|_VERSION|math\\\\.(pi|huge|maxinteger|mininteger)|utf8\\\\.charpattern|io\\\\.(stdin|stdout|stderr)|package\\\\.(config|cpath|loaded|loaders|path|preload|searchers))\\\\b|(?<![.])\\\\.{3}(?!\\\\.)\", \"name\": \"constant.language.lua\" }, { \"match\": \"(?<![^.]\\\\.|:)\\\\b(self)\\\\b\", \"name\": \"variable.language.self.lua\" }, { \"match\": \"(?<![^.]\\\\.|:)\\\\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|load|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawlen|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\\\\b(?!\\\\s*=(?!=))\", \"name\": \"support.function.lua\" }, { \"match\": \"(?<![^.]\\\\.|:)\\\\b(async)\\\\b(?!\\\\s*=(?!=))\", \"name\": \"entity.name.tag.lua\" }, { \"match\": \"(?<![^.]\\\\.|:)\\\\b(coroutine\\\\.(create|isyieldable|close|resume|running|status|wrap|yield)|string\\\\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|pack|packsize|rep|reverse|sub|unpack|upper)|table\\\\.(concat|insert|maxn|move|pack|remove|sort|unpack)|math\\\\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?|tointeger|type)|io\\\\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\\\\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\\\.(loadlib|seeall|searchpath)|debug\\\\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|[gs]etuservalue|set[Cc]stacklimit|traceback|upvalueid|upvaluejoin)|bit32\\\\.(arshift|band|bnot|bor|btest|bxor|extract|replace|lrotate|lshift|rrotate|rshift)|utf8\\\\.(char|codes|codepoint|len|offset))\\\\b(?!\\\\s*=(?!=))\", \"name\": \"support.function.library.lua\" }, { \"match\": \"\\\\b(and|or|not|\\\\|\\\\||\\\\&\\\\&|!)\\\\b\", \"name\": \"keyword.operator.lua\" }, { \"match\": `\\\\b([a-zA-Z_]\\\\w*)\\\\b(?=\\\\s*(?:[({\"']|\\\\[\\\\[))`, \"name\": \"support.function.any-method.lua\" }, { \"match\": \"\\\\b([a-zA-Z_]\\\\w*)\\\\b(?=\\\\s*\\\\??:)\", \"name\": \"entity.name.class.lua\" }, { \"match\": \"(?<=[^.]\\\\.|:)\\\\b([a-zA-Z_]\\\\w*)\\\\b(?!\\\\s*=\\\\s*\\\\b(function)\\\\b)\", \"name\": \"entity.other.attribute.lua\" }, { \"match\": \"\\\\b([a-zA-Z_]\\\\w*)\\\\b(?!\\\\s*=\\\\s*\\\\b(function)\\\\b)\", \"name\": \"variable.other.lua\" }, { \"match\": \"\\\\b([a-zA-Z_]\\\\w*)\\\\b(?=\\\\s*=\\\\s*\\\\b(function)\\\\b)\", \"name\": \"entity.name.function.lua\" }, { \"match\": \"\\\\+|-|%|#|\\\\*|\\\\/|\\\\^|==?|~=|!=|<=?|>=?|(?<!\\\\.)\\\\.{2}(?!\\\\.)\", \"name\": \"keyword.operator.lua\" }], \"repository\": { \"comment\": { \"patterns\": [{ \"begin\": \"(^[ \\\\t]+)?(?=--)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.lua\" } }, \"end\": \"(?!\\\\G)((?!^)[ \\\\t]+\\\\n)?\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.trailing.lua\" } }, \"patterns\": [{ \"begin\": \"--\\\\[(=*)\\\\[@@@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.lua\" } }, \"end\": \"(--)?\\\\]\\\\1\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.lua\" } }, \"name\": \"\", \"patterns\": [{ \"include\": \"source.lua\" }] }, { \"begin\": \"--\\\\[(=*)\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.lua\" } }, \"end\": \"(--)?\\\\]\\\\1\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.lua\" } }, \"name\": \"comment.block.lua\", \"patterns\": [{ \"include\": \"#emmydoc\" }, { \"include\": \"#ldoc_tag\" }] }, { \"begin\": \"----\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.lua\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.double-dash.lua\" }, { \"begin\": \"---\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.lua\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.double-dash.documentation.lua\", \"patterns\": [{ \"include\": \"#emmydoc\" }, { \"include\": \"#ldoc_tag\" }] }, { \"begin\": \"--\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.lua\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.double-dash.lua\", \"patterns\": [{ \"include\": \"#ldoc_tag\" }] }] }, { \"begin\": \"\\\\/\\\\*\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.lua\" } }, \"end\": \"\\\\*\\\\/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.lua\" } }, \"name\": \"comment.block.lua\", \"patterns\": [{ \"include\": \"#emmydoc\" }, { \"include\": \"#ldoc_tag\" }] }] }, \"emmydoc\": { \"patterns\": [{ \"begin\": \"(?<=---)[ \\\\t]*@class\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"match\": \"\\\\b([a-zA-Z_\\\\*][a-zA-Z0-9_\\\\.\\\\*\\\\-]*)\", \"name\": \"support.class.lua\" }, { \"match\": \":|,\", \"name\": \"keyword.operator.lua\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@enum\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"begin\": \"\\\\b([a-zA-Z_\\\\*][a-zA-Z0-9_\\\\.\\\\*\\\\-]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.lua\" } }, \"end\": \"(?=\\\\n)\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@type\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@alias\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"begin\": \"\\\\b([a-zA-Z_\\\\*][a-zA-Z0-9_\\\\.\\\\*\\\\-]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.lua\" } }, \"end\": \"(?=[\\\\n#])\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }] }] }, { \"begin\": \"(?<=---)[ \\\\t]*(@operator)\\\\s*(\\\\b[a-z]+)?\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.annotation.lua\" }, \"2\": { \"name\": \"support.function.library.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@cast\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"begin\": \"\\\\b([a-zA-Z_\\\\*][a-zA-Z0-9_\\\\.\\\\*\\\\-]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.lua\" } }, \"end\": \"(?=\\\\n)\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }, { \"match\": \"([+-|])\", \"name\": \"keyword.operator.lua\" }] }] }, { \"begin\": \"(?<=---)[ \\\\t]*@param\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"begin\": \"\\\\b([a-zA-Z_]\\\\w*)\\\\b(\\\\??)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.variable.lua\" }, \"2\": { \"name\": \"keyword.operator.lua\" } }, \"end\": \"(?=[\\\\n#])\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }] }] }, { \"begin\": \"(?<=---)[ \\\\t]*@return\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"match\": \"\\\\?\", \"name\": \"keyword.operator.lua\" }, { \"include\": \"#emmydoc.type\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@field\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"begin\": \"(\\\\b([a-zA-Z_]\\\\w*)\\\\b|(\\\\[))(\\\\??)\", \"beginCaptures\": { \"2\": { \"name\": \"entity.name.variable.lua\" }, \"3\": { \"name\": \"keyword.operator.lua\" } }, \"end\": \"(?=[\\\\n#])\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#emmydoc.type\" }, { \"match\": \"\\\\]\", \"name\": \"keyword.operator.lua\" }] }] }, { \"begin\": \"(?<=---)[ \\\\t]*@generic\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"begin\": \"\\\\b([a-zA-Z_]\\\\w*)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.generic.lua\" } }, \"end\": \"(?=\\\\n)|(,)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.lua\" } }, \"patterns\": [{ \"match\": \":\", \"name\": \"keyword.operator.lua\" }, { \"include\": \"#emmydoc.type\" }] }] }, { \"begin\": \"(?<=---)[ \\\\t]*@vararg\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@overload\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"include\": \"#emmydoc.type\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@deprecated\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\" }, { \"begin\": \"(?<=---)[ \\\\t]*@meta\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\" }, { \"begin\": \"(?<=---)[ \\\\t]*@private\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\" }, { \"begin\": \"(?<=---)[ \\\\t]*@protected\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\" }, { \"begin\": \"(?<=---)[ \\\\t]*@package\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\" }, { \"begin\": \"(?<=---)[ \\\\t]*@version\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"match\": \"\\\\b(5\\\\.1|5\\\\.2|5\\\\.3|5\\\\.4|JIT)\\\\b\", \"name\": \"support.class.lua\" }, { \"match\": \",|>|<\", \"name\": \"keyword.operator.lua\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@see\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"match\": \"\\\\b([a-zA-Z_\\\\*][a-zA-Z0-9_\\\\.\\\\*\\\\-]*)\", \"name\": \"support.class.lua\" }, { \"match\": \"#\", \"name\": \"keyword.operator.lua\" }] }, { \"begin\": \"(?<=---)[ \\\\t]*@diagnostic\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"begin\": \"([a-zA-Z_\\\\-0-9]+)[ \\\\t]*(:)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unit\" }, \"2\": { \"name\": \"keyword.operator.unit\" } }, \"end\": \"(?=\\\\n)\", \"patterns\": [{ \"match\": \"\\\\b([a-zA-Z_\\\\*][a-zA-Z0-9_\\\\-]*)\", \"name\": \"support.class.lua\" }, { \"match\": \",\", \"name\": \"keyword.operator.lua\" }] }] }, { \"begin\": \"(?<=---)[ \\\\t]*@module\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"include\": \"#string\" }] }, { \"match\": \"(?<=---)[ \\\\t]*@(async|nodiscard)\", \"name\": \"storage.type.annotation.lua\" }, { \"begin\": \"(?<=---)\\\\|\\\\s*[>+]?\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.annotation.lua\" } }, \"end\": \"(?=[\\\\n@#])\", \"patterns\": [{ \"include\": \"#string\" }] }] }, \"emmydoc.type\": { \"patterns\": [{ \"begin\": \"\\\\bfun\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.lua\" } }, \"end\": \"(?=[\\\\s#])\", \"patterns\": [{ \"match\": \"[(),:?][ \\\\t]*\", \"name\": \"keyword.operator.lua\" }, { \"match\": \"([a-zA-Z_][a-zA-Z0-9_\\\\.\\\\*\\\\[\\\\]<>\\\\,\\\\-]*)(?<!,)[ \\\\t]*(?=\\\\??:)\", \"name\": \"entity.name.variable.lua\" }, { \"include\": \"#emmydoc.type\" }, { \"include\": \"#string\" }] }, { \"match\": \"<[a-zA-Z_\\\\*][a-zA-Z0-9_\\\\.\\\\*\\\\-]*>\", \"name\": \"storage.type.generic.lua\" }, { \"match\": \"\\\\basync\\\\b\", \"name\": \"entity.name.tag.lua\" }, { \"match\": \"[{}:\\\\,?\\\\|\\\\`][ \\\\t]*\", \"name\": \"keyword.operator.lua\" }, { \"begin\": `(?=[a-zA-Z_\\\\.\\\\*\"'\\\\[])`, \"end\": \"(?=[\\\\s)\\\\,?:}\\\\|#])\", \"patterns\": [{ \"match\": \"([a-zA-Z0-9_\\\\.\\\\*\\\\[\\\\]<>\\\\,\\\\-]+)(?<!,)[ \\\\t]*\", \"name\": \"support.type.lua\" }, { \"match\": \"(\\\\.\\\\.\\\\.)[ \\\\t]*\", \"name\": \"constant.language.lua\" }, { \"include\": \"#string\" }] }] }, \"escaped_char\": { \"patterns\": [{ \"match\": `\\\\\\\\[abfnrtv\\\\\\\\\"'\\\\n]`, \"name\": \"constant.character.escape.lua\" }, { \"match\": \"\\\\\\\\z[\\\\n\\\\t ]*\", \"name\": \"constant.character.escape.lua\" }, { \"match\": \"\\\\\\\\\\\\d{1,3}\", \"name\": \"constant.character.escape.byte.lua\" }, { \"match\": \"\\\\\\\\x[0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.byte.lua\" }, { \"match\": \"\\\\\\\\u\\\\{[0-9A-Fa-f]+\\\\}\", \"name\": \"constant.character.escape.unicode.lua\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.character.escape.lua\" }] }, \"ldoc_tag\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.block.tag.ldoc\" }, \"2\": { \"name\": \"storage.type.class.ldoc\" } }, \"match\": \"\\\\G[ \\\\t]*(@)(alias|annotation|author|charset|class|classmod|comment|constructor|copyright|description|example|export|factory|field|file|fixme|function|include|lfunction|license|local|module|name|param|pragma|private|raise|release|return|script|section|see|set|static|submodule|summary|tfield|thread|tparam|treturn|todo|topic|type|usage|warning|within)\\\\b\" }, \"string\": { \"patterns\": [{ \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.lua\" } }, \"end\": \"'[ \\\\t]*|(?=\\\\n)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.lua\" } }, \"name\": \"string.quoted.single.lua\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.lua\" } }, \"end\": '\"[ \\\\t]*|(?=\\\\n)', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.lua\" } }, \"name\": \"string.quoted.double.lua\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.lua\" } }, \"end\": \"`[ \\\\t]*|(?=\\\\n)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.lua\" } }, \"name\": \"string.quoted.double.lua\" }, { \"begin\": \"(?<=\\\\.cdef)\\\\s*(\\\\[(=*)\\\\[)\", \"beginCaptures\": { \"0\": { \"name\": \"string.quoted.other.multiline.lua\" }, \"1\": { \"name\": \"punctuation.definition.string.begin.lua\" } }, \"contentName\": \"meta.embedded.lua\", \"end\": \"(\\\\]\\\\2\\\\])[ \\\\t]*\", \"endCaptures\": { \"0\": { \"name\": \"string.quoted.other.multiline.lua\" }, \"1\": { \"name\": \"punctuation.definition.string.end.lua\" } }, \"patterns\": [{ \"include\": \"source.c\" }] }, { \"begin\": \"(?<!--)\\\\[(=*)\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.lua\" } }, \"end\": \"\\\\]\\\\1\\\\][ \\\\t]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.lua\" } }, \"name\": \"string.quoted.other.multiline.lua\" }] } }, \"scopeName\": \"source.lua\", \"embeddedLangs\": [\"c\"] });\nvar lua = [\n  ...c,\n  lang\n];\n\nexport { lua as default };\n","import html from './html.mjs';\nimport xml from './xml.mjs';\nimport sql from './sql.mjs';\nimport css from './css.mjs';\nimport c from './c.mjs';\nimport javascript from './javascript.mjs';\nimport shellscript from './shellscript.mjs';\nimport lua from './lua.mjs';\nimport './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Ruby\", \"name\": \"ruby\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.class.ruby\" }, \"2\": { \"name\": \"entity.name.type.class.ruby\" }, \"3\": { \"name\": \"keyword.operator.other.ruby\" }, \"4\": { \"name\": \"entity.other.inherited-class.ruby\" }, \"5\": { \"name\": \"keyword.operator.other.ruby\" }, \"6\": { \"name\": \"variable.other.object.ruby\" } }, \"match\": \"^\\\\s*(class)\\\\s+(?:([.a-zA-Z0-9_:]+)(?:\\\\s*(<)\\\\s*([.a-zA-Z0-9_:]+))?|(<<)\\\\s*([.a-zA-Z0-9_:]+))\", \"name\": \"meta.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.module.ruby\" }, \"2\": { \"name\": \"entity.name.type.module.ruby\" }, \"3\": { \"name\": \"entity.other.inherited-class.module.first.ruby\" }, \"4\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"5\": { \"name\": \"entity.other.inherited-class.module.second.ruby\" }, \"6\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"7\": { \"name\": \"entity.other.inherited-class.module.third.ruby\" }, \"8\": { \"name\": \"punctuation.separator.inheritance.ruby\" } }, \"match\": \"^\\\\s*(module)\\\\s+(([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))*[A-Z]\\\\w*)\", \"name\": \"meta.module.ruby\" }, { \"comment\": \"else if is a common mistake carried over from other languages. it works if you put in a second end, but it\\u2019s never what you want.\", \"match\": \"(?<!\\\\.)\\\\belse(\\\\s)+if\\\\b\", \"name\": \"invalid.deprecated.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.9 syntax)\", \"match\": \"(?>[a-zA-Z_]\\\\w*(?>[?!])?)(:)(?!:)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.8 syntax)\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!])?)(?=\\\\s*=>)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"comment\": \"everything being a reserved word, not a value and needing a 'end' is a..\", \"match\": \"(?<!\\\\.)\\\\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\\\\b(?![?!])\", \"name\": \"keyword.control.ruby\" }, { \"comment\": \"contextual smart pair support for block parameters\", \"match\": \"(?<!\\\\.)\\\\bdo\\\\b\", \"name\": \"keyword.control.start-block.ruby\" }, { \"comment\": \"contextual smart pair support\", \"match\": \"(?<=\\\\{)(\\\\s+)\", \"name\": \"meta.syntax.ruby.start-block\" }, { \"match\": \"(?<!\\\\.)\\\\b(alias|alias_method|block_given[?]|break|defined[?]|iterator[?]|next|redo|retry|return|super|undef|yield)(\\\\b|(?<=[?]))(?![?!])\", \"name\": \"keyword.control.pseudo-method.ruby\" }, { \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\", \"name\": \"constant.language.ruby\" }, { \"match\": \"\\\\b(__(dir|FILE|LINE)__)\\\\b(?![?!])\", \"name\": \"variable.language.ruby\" }, { \"begin\": \"^__END__\\\\n\", \"captures\": { \"0\": { \"name\": \"string.unquoted.program-block.ruby\" } }, \"comment\": \"__END__ marker\", \"contentName\": \"text.plain\", \"end\": \"(?=not)impossible\", \"patterns\": [{ \"begin\": \"(?=<?xml|<(?i:html\\\\b)|!DOCTYPE (?i:html\\\\b))\", \"end\": \"(?=not)impossible\", \"name\": \"text.html.embedded.ruby\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, { \"match\": \"\\\\b(self)\\\\b(?![?!])\", \"name\": \"variable.language.self.ruby\" }, { \"comment\": \" everything being a method but having a special function is a..\", \"match\": \"\\\\b(initialize|new|loop|include|extend|prepend|fail|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|private_class_method|module_function|public|public_class_method|protected|refine|using)\\\\b(?![?!])\", \"name\": \"keyword.other.special-method.ruby\" }, { \"begin\": \"\\\\b(?<!\\\\.|::)(require|require_relative)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.other.special-method.ruby\" } }, \"end\": \"$|(?=#|\\\\})\", \"name\": \"meta.require.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)(!|@|&|`|'|\\\\+|\\\\d+|~|=|/|\\\\\\\\|,|;|\\\\.|<|>|_|\\\\*|\\\\$|\\\\?|:|\\\"|-[0adFiIlpvw])\", \"name\": \"variable.other.readwrite.global.pre-defined.ruby\" }, { \"begin\": \"\\\\b(ENV)\\\\[\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.constant.ruby\" } }, \"end\": \"\\\\]\", \"name\": \"meta.environment-variable.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b[A-Z]\\\\w*(?=((\\\\.|::)[A-Za-z]|\\\\[))\", \"name\": \"support.class.ruby\" }, { \"match\": \"\\\\b(abort|at_exit|autoload[?]?|binding|callcc|caller|caller_locations|chomp|chop|eval|exec|exit|exit!|fork|format|gets|global_variables|gsub|lambda|load|local_variables|open|p|print|printf|proc|putc|puts|rand|readline|readlines|select|set_trace_func|sleep|spawn|sprintf|srand|sub|syscall|system|test|trace_var|trap|untrace_var|warn)(\\\\b|(?<=[?!]))(?![?!])\", \"name\": \"support.function.kernel.ruby\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"variable.other.constant.ruby\" }, { \"begin\": \"(?=def\\\\b)(?<=^|\\\\s)(def)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"comment\": \"the method pattern comes from the symbol pattern, see there for a explaination\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?=[&*_a-zA-Z])\", \"end\": \"(?=[,)])\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\" }, { \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }], \"repository\": { \"braces\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }, \"parens\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] } } }, { \"begin\": \"(?=def\\\\b)(?<=^|\\\\s)(def)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))[ \\\\t](?=[ \\\\t]*[^\\\\s#;])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \"same as the previous rule, but without parentheses around the arguments\", \"end\": \"$\", \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?![\\\\s,])\", \"end\": \"(?=,|$)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\", \"name\": \"variable.parameter.function.ruby\" }, { \"include\": \"$self\" }] }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"3\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \" the optional name is just to catch the def also without a method-name\", \"match\": \"(?=def\\\\b)(?<=^|\\\\s)(def)\\\\b(\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?)))?\", \"name\": \"meta.function.method.without-arguments.ruby\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(?=\\\\.\\\\d|[eE])(\\\\.\\\\d(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?r?i?\\\\b\", \"name\": \"constant.numeric.float.ruby\" }, { \"match\": \"\\\\b(0|(0[dD]\\\\d|[1-9])(?>_?\\\\d)*)r?i?\\\\b\", \"name\": \"constant.numeric.integer.ruby\" }, { \"match\": \"\\\\b0[xX]\\\\h(?>_?\\\\h)*r?i?\\\\b\", \"name\": \"constant.numeric.hex.ruby\" }, { \"match\": \"\\\\b0[bB][01](?>_?[01])*r?i?\\\\b\", \"name\": \"constant.numeric.binary.ruby\" }, { \"match\": \"\\\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\\\b\", \"name\": \"constant.numeric.octal.ruby\" }, { \"begin\": \":'\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": \"'\", \"name\": \"constant.other.symbol.single-quoted.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\['\\\\\\\\]\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": ':\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": '\"', \"name\": \"constant.other.symbol.double-quoted.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"comment\": \"Needs higher precedence than regular expressions.\", \"match\": \"(?<!\\\\()/=\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"single quoted string (does not allow interpolation)\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.single.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\'|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"double quoted string (allows for interpolation)\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.double.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"execute string (allows for interpolation)\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"include\": \"#percent_literals\" }, { \"begin\": \"(?:^|(?<=[=>~(?:\\\\[,|&;]|[\\\\s;]if\\\\s|[\\\\s;]elsif\\\\s|[\\\\s;]while\\\\s|[\\\\s;]unless\\\\s|[\\\\s;]when\\\\s|[\\\\s;]assert_match\\\\s|[\\\\s;]or\\\\s|[\\\\s;]and\\\\s|[\\\\s;]not\\\\s|[\\\\s.]index\\\\s|[\\\\s.]scan\\\\s|[\\\\s.]sub\\\\s|[\\\\s.]sub!\\\\s|[\\\\s.]gsub\\\\s|[\\\\s.]gsub!\\\\s|[\\\\s.]match\\\\s)|(?<=^when\\\\s|^if\\\\s|^elsif\\\\s|^while\\\\s|^unless\\\\s))\\\\s*((/))(?![*+{}?])\", \"captures\": { \"1\": { \"name\": \"string.regexp.classic.ruby\" }, \"2\": { \"name\": \"punctuation.definition.string.ruby\" } }, \"comment\": \"regular expressions (normal)\\n\t\t\twe only start a regexp if the character before it (excluding whitespace)\\n\t\t\tis what we think is before a regexp\\n\t\t\t\", \"contentName\": \"string.regexp.classic.ruby\", \"end\": \"((/[eimnosux]*))\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?![>=]))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?|(@@?|\\\\$)[a-zA-Z_]\\\\w*)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"^=begin\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"multiline comments\", \"end\": \"^=end\", \"name\": \"comment.block.documentation.ruby\" }, { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.ruby\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.ruby\" }] }, { \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2nd alternation = octal):\\n\t\t\t?\\\\0      ?\\\\07     ?\\\\017\\n\\n\t\t\texamples (3rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (4th alternation = meta-ctrl):\\n\t\t\t?\\\\C-a    ?\\\\M-a    ?\\\\C-\\\\M-\\\\C-\\\\M-a\\n\\n\t\t\texamples (4th alternation = normal):\\n\t\t\t?a       ?A       ?0 \\n\t\t\t?*       ?\"       ?( \\n\t\t\t?.       ?#\\n\t\t\t\\n\t\t\t\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t', \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|0[0-7]{0,2}(?![0-7])\\\\b|[^x0MC])|(\\\\\\\\[MC]-)+\\\\w|[^\\\\s\\\\\\\\])\", \"name\": \"constant.numeric.ruby\" }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded html\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.html\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.html\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.html.basic\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded xml\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.xml\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.xml\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.xml\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded sql\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.sql\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.sql\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.sql\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded css\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.css\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.css\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.css\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c++\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c++\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c++\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c++\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded jQuery javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js.jquery\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js.jquery\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js.jquery\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded shell\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.shell\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.shell\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.shell\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded lua\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.lua\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.lua\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.lua\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded ruby\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.ruby\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.ruby\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": \"(?>=\\\\s*<<(\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"^\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?><<[-~](\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"heredoc with indented terminator\", \"end\": \"\\\\s*\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?<=\\\\{|do|\\\\{\\\\s|do\\\\s)(\\\\|)\", \"captures\": { \"1\": { \"name\": \"punctuation.separator.arguments.ruby\" } }, \"end\": \"(?<!\\\\|)(\\\\|)(?!\\\\|)\", \"patterns\": [{ \"include\": \"$self\" }, { \"match\": \"[_a-zA-Z][_a-zA-Z0-9]*\", \"name\": \"variable.other.block.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.variable.ruby\" }] }, { \"match\": \"=>\", \"name\": \"punctuation.separator.key-value\" }, { \"match\": \"->\", \"name\": \"support.function.kernel.lambda.ruby\" }, { \"match\": \"<<=|%=|&{1,2}=|\\\\*=|\\\\*\\\\*=|\\\\+=|-=|\\\\^=|\\\\|{1,2}=|<<\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"match\": \"<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\\\t])\\\\?\", \"name\": \"keyword.operator.comparison.ruby\" }, { \"match\": \"(?<!\\\\.)\\\\b(and|not|or)\\\\b(?![?!])\", \"name\": \"keyword.operator.logical.ruby\" }, { \"comment\": \"Make sure this goes after assignment and comparison\", \"match\": \"(?<=^|[ \\\\t])!|&&|\\\\|\\\\||\\\\^\", \"name\": \"keyword.operator.logical.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Safe navigation operator - Added in 2.3\", \"match\": \"(&\\\\.)\\\\s*(?![A-Z])\" }, { \"match\": \"(%|&|\\\\*\\\\*|\\\\*|\\\\+|-|/)\", \"name\": \"keyword.operator.arithmetic.ruby\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.ruby\" }, { \"match\": \"\\\\||~|>>\", \"name\": \"keyword.operator.other.ruby\" }, { \"match\": \";\", \"name\": \"punctuation.separator.statement.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.object.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace.ruby\" } }, \"comment\": \"Mark as namespace separator if double colons followed by capital letter\", \"match\": \"(::)\\\\s*(?=[A-Z])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Mark as method separator if double colons not followed by capital letter\", \"match\": \"(\\\\.|::)\\\\s*(?![A-Z])\" }, { \"comment\": \"Must come after method and constant separators to prefer double colons\", \"match\": \":\", \"name\": \"punctuation.separator.other.ruby\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.section.scope.begin.ruby\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.section.scope.end.ruby\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.section.array.begin.ruby\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.section.array.end.ruby\" }, { \"match\": \"\\\\(|\\\\)\", \"name\": \"punctuation.section.function.ruby\" }], \"repository\": { \"escaped_char\": { \"match\": \"\\\\\\\\(?:[0-7]{1,3}|x[\\\\da-fA-F]{1,2}|.)\", \"name\": \"constant.character.escape.ruby\" }, \"heredoc\": { \"begin\": \"^<<[-~]?\\\\w+\", \"end\": \"$\", \"patterns\": [{ \"include\": \"$self\" }] }, \"interpolated_ruby\": { \"patterns\": [{ \"begin\": \"#\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.ruby\" }, \"1\": { \"name\": \"source.ruby\" } }, \"name\": \"meta.embedded.line.ruby\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }, { \"include\": \"$self\" }], \"repository\": { \"nest_curly_and_self\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.scope.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }] }, { \"include\": \"$self\" }] } } }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }] }, \"percent_literals\": { \"patterns\": [{ \"begin\": \"%i(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"constant.other.symbol.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%I(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"constant.other.symbol.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%q(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%Q?(?:([(\\\\[{<])|([^\\\\w\\\\s=]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%r(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"([)\\\\]}>]\\\\2|\\\\1\\\\2)[eimnosux]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.regexp.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#regex_sub\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%s(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.end.ruby\" } }, \"name\": \"constant.other.symbol.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%w(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"string.other.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"string.other.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%W(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"string.other.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%x(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }] }, \"regex_sub\": { \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.quantifier.begin.ruby\" }, \"3\": { \"name\": \"punctuation.definition.quantifier.end.ruby\" } }, \"match\": \"(\\\\{)\\\\d+(,\\\\d+)?(\\\\})\", \"name\": \"keyword.operator.quantifier.ruby\" }, { \"begin\": \"\\\\[\\\\^?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.begin.ruby\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.end.ruby\" } }, \"name\": \"constant.other.character-class.set.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\\\\?#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.ruby\" } }, \"name\": \"comment.line.number-sign.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.ruby\" } }, \"end\": \"\\\\)\", \"name\": \"meta.group.regexp.ruby\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"begin\": \"(?<=^|\\\\s)(#)\\\\s(?=[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.\", \"end\": \"$\\\\n?\", \"name\": \"comment.line.number-sign.ruby\" }] } }, \"scopeName\": \"source.ruby\", \"embeddedLangs\": [\"html\", \"xml\", \"sql\", \"css\", \"c\", \"javascript\", \"shellscript\", \"lua\"], \"aliases\": [\"rb\"] });\nvar ruby = [\n  ...html,\n  ...xml,\n  ...sql,\n  ...css,\n  ...c,\n  ...javascript,\n  ...shellscript,\n  ...lua,\n  lang\n];\n\nexport { ruby as default };\n","import java from './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"XML\", \"name\": \"xml\", \"patterns\": [{ \"begin\": \"(<\\\\?)\\\\s*([-_a-zA-Z0-9]+)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.xml\" } }, \"end\": \"(\\\\?>)\", \"name\": \"meta.tag.preprocessor.xml\", \"patterns\": [{ \"match\": \" ([a-zA-Z-]+)\", \"name\": \"entity.other.attribute-name.xml\" }, { \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] }, { \"begin\": \"(<!)(DOCTYPE)\\\\s+([:a-zA-Z_][:a-zA-Z0-9_.-]*)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"keyword.other.doctype.xml\" }, \"3\": { \"name\": \"variable.language.documentroot.xml\" } }, \"end\": \"\\\\s*(>)\", \"name\": \"meta.tag.sgml.doctype.xml\", \"patterns\": [{ \"include\": \"#internalSubset\" }] }, { \"include\": \"#comments\" }, { \"begin\": \"(<)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(?=(\\\\s[^>]*)?></\\\\2>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.xml\" }, \"3\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"4\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"5\": { \"name\": \"entity.name.tag.localname.xml\" } }, \"end\": \"(>)(</)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"punctuation.definition.tag.xml\" }, \"3\": { \"name\": \"entity.name.tag.xml\" }, \"4\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"5\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"6\": { \"name\": \"entity.name.tag.localname.xml\" }, \"7\": { \"name\": \"punctuation.definition.tag.xml\" } }, \"name\": \"meta.tag.no-content.xml\", \"patterns\": [{ \"include\": \"#tagStuff\" }] }, { \"begin\": \"(</?)(?:([-\\\\w\\\\.]+)((:)))?([-\\\\w\\\\.:]+)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"3\": { \"name\": \"entity.name.tag.xml\" }, \"4\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"5\": { \"name\": \"entity.name.tag.localname.xml\" } }, \"end\": \"(/?>)\", \"name\": \"meta.tag.xml\", \"patterns\": [{ \"include\": \"#tagStuff\" }] }, { \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }, { \"begin\": \"<%@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.xml\" } }, \"end\": \"%>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.xml\" } }, \"name\": \"source.java-props.embedded.xml\", \"patterns\": [{ \"match\": \"page|include|taglib\", \"name\": \"keyword.other.page-props.xml\" }] }, { \"begin\": \"<%[!=]?(?!--)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.xml\" } }, \"end\": \"(?!--)%>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.xml\" } }, \"name\": \"source.java.embedded.xml\", \"patterns\": [{ \"include\": \"source.java\" }] }, { \"begin\": \"<!\\\\[CDATA\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": \"]]>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.unquoted.cdata.xml\" }], \"repository\": { \"EntityDecl\": { \"begin\": \"(<!)(ENTITY)\\\\s+(%\\\\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\\\\s+(?:SYSTEM|PUBLIC)\\\\s+)?\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"keyword.other.entity.xml\" }, \"3\": { \"name\": \"punctuation.definition.entity.xml\" }, \"4\": { \"name\": \"variable.language.entity.xml\" }, \"5\": { \"name\": \"keyword.other.entitytype.xml\" } }, \"end\": \"(>)\", \"patterns\": [{ \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] }, \"bare-ampersand\": { \"match\": \"&\", \"name\": \"invalid.illegal.bad-ampersand.xml\" }, \"comments\": { \"patterns\": [{ \"begin\": \"<%--\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.xml\" }, \"end\": \"--%>\", \"name\": \"comment.block.xml\" } }, { \"begin\": \"<!--\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.xml\" } }, \"end\": \"-->\", \"name\": \"comment.block.xml\", \"patterns\": [{ \"begin\": \"--(?!>)\", \"captures\": { \"0\": { \"name\": \"invalid.illegal.bad-comments-or-CDATA.xml\" } } }] }] }, \"doublequotedString\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.quoted.double.xml\", \"patterns\": [{ \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }] }, \"entity\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" }, \"3\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"match\": \"(&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#\\\\d+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.xml\" }, \"internalSubset\": { \"begin\": \"(\\\\[)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"end\": \"(\\\\])\", \"name\": \"meta.internalsubset.xml\", \"patterns\": [{ \"include\": \"#EntityDecl\" }, { \"include\": \"#parameterEntity\" }, { \"include\": \"#comments\" }] }, \"parameterEntity\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" }, \"3\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"match\": \"(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)\", \"name\": \"constant.character.parameter-entity.xml\" }, \"singlequotedString\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.quoted.single.xml\", \"patterns\": [{ \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }] }, \"tagStuff\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.namespace.xml\" }, \"2\": { \"name\": \"entity.other.attribute-name.xml\" }, \"3\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"4\": { \"name\": \"entity.other.attribute-name.localname.xml\" } }, \"match\": \"(?:^|\\\\s+)(?:([-\\\\w.]+)((:)))?([-\\\\w.:]+)\\\\s*=\" }, { \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] } }, \"scopeName\": \"text.xml\", \"embeddedLangs\": [\"java\"] });\nvar xml = [\n  ...java,\n  lang\n];\n\nexport { xml as default };\n"],"names":["lang","Object","freeze","lua","_c_mjs__WEBPACK_IMPORTED_MODULE_0__","ruby","_html_mjs__WEBPACK_IMPORTED_MODULE_0__","_xml_mjs__WEBPACK_IMPORTED_MODULE_1__","_sql_mjs__WEBPACK_IMPORTED_MODULE_2__","_css_mjs__WEBPACK_IMPORTED_MODULE_3__","_c_mjs__WEBPACK_IMPORTED_MODULE_4__","_javascript_mjs__WEBPACK_IMPORTED_MODULE_5__","_shellscript_mjs__WEBPACK_IMPORTED_MODULE_6__","_lua_mjs__WEBPACK_IMPORTED_MODULE_7__","xml","_java_mjs__WEBPACK_IMPORTED_MODULE_0__"],"sourceRoot":""}