{"version":3,"file":"static/chunks/9286.c010c644a58b61cf.js","mappings":"sIACA,IAAAA,EAAA,CADAC,OAAAC,MAAA,EAA6B,8CAA0D,UAAc,GAAO,WAAe,yBAA4B,GAAK,oDAA6D,CAAI,UAAc,GAAO,WAAe,gBAAmB,EAAG,GAAS,2CAA8C,GAAS,wCAAgD,yBAA4B,CAAI,iCAAoC,CAAI,iCAAoC,CAAI,0BAA6B,GAAK,oDAA6D,aAAmB,wBAA0B,UAAc,GAAO,WAAe,0BAA6B,CAAI,8BAAiC,GAAK,kFAA+F,qBAAyB,+EAAsF,2CAA+C,eAAqB,UAAc,GAAO,2CAA8C,GAAS,sCAAyC,GAAS,0CAA8C,yEAAgF,EAAI,KAAW,UAAc,GAAO,kCAAqC,GAAS,sCAA8C,qBAAwB,GAAK,wCAAiD,gBAAoB,2DAAsE,wBAA4B,kFAA6F,UAAgB,gDAAwD,4BAGruD","sources":["webpack://_N_E/./node_modules/shiki/dist/langs/dotenv.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"dotEnv\", \"name\": \"dotenv\", \"patterns\": [{ \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#line-comment\" }] } }, \"comment\": \"Full Line Comment\", \"match\": \"^\\\\s?(#.*$)\\\\n\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#key\" }] }, \"2\": { \"name\": \"keyword.operator.assignment.dotenv\" }, \"3\": { \"name\": \"property.value.dotenv\", \"patterns\": [{ \"include\": \"#line-comment\" }, { \"include\": \"#double-quoted-string\" }, { \"include\": \"#single-quoted-string\" }, { \"include\": \"#interpolation\" }] } }, \"comment\": \"ENV entry\", \"match\": \"^\\\\s?(.*?)\\\\s?(=)(.*)$\" }], \"repository\": { \"double-quoted-string\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#escape-characters\" }] } }, \"comment\": \"Double Quoted String\", \"match\": '\"(.*)\"', \"name\": \"string.quoted.double.dotenv\" }, \"escape-characters\": { \"comment\": \"Escape characters\", \"match\": `\\\\\\\\[nrtfb\"'\\\\\\\\]|\\\\\\\\u[0123456789ABCDEF]{4}`, \"name\": \"constant.character.escape.dotenv\" }, \"interpolation\": { \"captures\": { \"1\": { \"name\": \"keyword.interpolation.begin.dotenv\" }, \"2\": { \"name\": \"variable.interpolation.dotenv\" }, \"3\": { \"name\": \"keyword.interpolation.end.dotenv\" } }, \"comment\": \"Interpolation (variable substitution)\", \"match\": \"(\\\\$\\\\{)(.*)(\\\\})\" }, \"key\": { \"captures\": { \"1\": { \"name\": \"keyword.key.export.dotenv\" }, \"2\": { \"name\": \"variable.key.dotenv\", \"patterns\": [{ \"include\": \"#variable\" }] } }, \"comment\": \"Key\", \"match\": \"(export\\\\s)?(.*)\" }, \"line-comment\": { \"comment\": \"Comment\", \"match\": \"#.*$\", \"name\": \"comment.line.dotenv\" }, \"single-quoted-string\": { \"comment\": \"Single Quoted String\", \"match\": \"'(.*)'\", \"name\": \"string.quoted.single.dotenv\" }, \"variable\": { \"comment\": \"env variable\", \"match\": \"[a-zA-Z_]+\\\\w*\" } }, \"scopeName\": \"source.dotenv\" });\nvar dotenv = [\n  lang\n];\n\nexport { dotenv as default };\n"],"names":["dotenv","Object","freeze"],"sourceRoot":""}