{"version":3,"file":"static/chunks/3181.cf6982dbdd9e5021.js","mappings":"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","sources":["webpack://_N_E/./node_modules/shiki/dist/langs/ballerina.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Ballerina\", \"fileTypes\": [\"bal\"], \"name\": \"ballerina\", \"patterns\": [{ \"include\": \"#statements\" }], \"repository\": { \"access-modifier\": { \"patterns\": [{ \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.ballerina keyword.other.ballerina\" }] }, \"annotationAttachment\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.decorator.ballerina\" }, \"2\": { \"name\": \"support.type.ballerina\" }, \"3\": { \"name\": \"punctuation.decorator.ballerina\" }, \"4\": { \"name\": \"support.type.ballerina\" } }, \"match\": \"(@)((?:[_$A-Za-z][_$0-9A-Za-z]*))\\\\s*(:?)\\\\s*((?:[_$A-Za-z][_$0-9A-Za-z]*)?)\" }] }, \"annotationDefinition\": { \"patterns\": [{ \"begin\": \"\\\\bannotation\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \";\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"array-literal\": { \"begin\": \"\\\\s*(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.ballerina\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"name\": \"meta.array.literal.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }] }, \"booleans\": { \"patterns\": [{ \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.ballerina\" }] }, \"butClause\": { \"patterns\": [{ \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" } }, \"end\": \",|(?=\\\\})\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"butExp\": { \"patterns\": [{ \"begin\": \"\\\\bbut\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#butExpBody\" }, { \"include\": \"#comment\" }] }] }, \"butExpBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#parameter\" }, { \"include\": \"#butClause\" }, { \"include\": \"#comment\" }] }] }, \"call\": { \"patterns\": [{ \"match\": \"(?:\\\\')?([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=\\\\()\", \"name\": \"entity.name.function.ballerina\" }] }, \"callableUnitBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#workerDef\" }, { \"include\": \"#service-decl\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#forkStatement\" }, { \"include\": \"#code\" }] }] }, \"class-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.class.body.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#access-modifier\" }, { \"include\": \"#keywords\" }, { \"begin\": \"(?<=:)\\\\s*\", \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }] }, \"class-defn\": { \"begin\": \"(\\\\s+)(class\\\\b)|^class\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.class.ballerina keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.ballerina\", \"patterns\": [{ \"include\": \"#keywords\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.class.ballerina\" } }, \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\" }, { \"include\": \"#class-body\" }] }, \"code\": { \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#matchStatement\" }, { \"include\": \"#butExp\" }, { \"include\": \"#xml\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#keywords\" }, { \"include\": \"#strings\" }, { \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#numbers\" }, { \"include\": \"#maps\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#paranthesisedBracket\" }, { \"include\": \"#regex\" }] }, \"comment\": { \"patterns\": [{ \"match\": \"\\\\/\\\\/.*\", \"name\": \"comment.ballerina\" }] }, \"constrainType\": { \"patterns\": [{ \"begin\": \"<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#constrainType\" }, { \"match\": \"\\\\b([_$A-Za-z][_$0-9A-Za-z]*)\\\\b\", \"name\": \"storage.type.ballerina\" }] }] }, \"control-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.flow.ballerina\" } }, \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"include\": \"#for-loop\" }, { \"include\": \"#if-statement\" }, { \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.conditional.ballerina\" }] }, \"decl-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\} external;)|(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.block.ballerina\", \"patterns\": [{ \"include\": \"#statements\" }, { \"include\": \"#mdDocumentation\" }] }, \"declaration\": { \"patterns\": [{ \"include\": \"#import-declaration\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#typeDefinition\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#service-decl\" }, { \"include\": \"#class-defn\" }, { \"include\": \"#enum-decl\" }, { \"include\": \"#source\" }, { \"include\": \"#keywords\" }] }, \"defaultValue\": { \"patterns\": [{ \"begin\": \"[=:]\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=[,)])\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"defaultWithParentheses\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } } }] }, \"documentationBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.ballerina.documentation\" }, \"2\": { \"name\": \"keyword.other.ballerina.documentation\" }, \"3\": { \"name\": \"variable.parameter.ballerina.documentation\" }, \"4\": { \"name\": \"keyword.other.ballerina.documentation\" } }, \"match\": \"(P|R|T|F|V)({{)(.*)(}})\" }, { \"begin\": \"\\\\```\", \"end\": \"\\\\```\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"begin\": \"\\\\``\", \"end\": \"\\\\``\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"begin\": \"\\\\`\", \"end\": \"\\\\`\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"match\": \".\", \"name\": \"comment.block.ballerina.documentation\" }] }] }, \"documentationDef\": { \"patterns\": [{ \"begin\": \"\\\\b(?:documentation|deprecated)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"delimiter.curly\" } }, \"patterns\": [{ \"include\": \"#documentationBody\" }, { \"include\": \"#comment\" }] }] }, \"enum-decl\": { \"begin\": \"(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ballerina\" }, \"2\": { \"name\": \"keyword.other.ballerina\" }, \"3\": { \"name\": \"entity.name.type.enum.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.enum.declaration.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"begin\": \"([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.enummember.ballerina\" } }, \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\", \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"errorDestructure\": { \"patterns\": [{ \"begin\": \"error\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?==>)\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#keywords\" }, { \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#regex\" }] }, \"expression-operators\": { \"patterns\": [{ \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|-=\", \"name\": \"keyword.operator.assignment.compound.ballerina\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.ballerina\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.ballerina\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.ballerina\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.ballerina\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.ballerina\" }, \"3\": { \"name\": \"keyword.operator.arithmetic.ballerina\" } }, \"match\": \"(?<=[_$0-9A-Za-z])(!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }, { \"match\": \"!|&&|\\\\|\\\\||\\\\?\\\\?\", \"name\": \"keyword.operator.logical.ballerina\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.ballerina\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.ballerina\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.ballerina\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.ballerina\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.ballerina\" }] }, \"expressionWithoutIdentifiers\": { \"patterns\": [{ \"include\": \"#xml\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#comment\" }, { \"include\": \"#object-literal\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#literal\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#regex\" }] }, \"flags-on-off\": { \"name\": \"meta.flags.regexp.ballerina\", \"patterns\": [{ \"begin\": \"(\\\\??)([imsx]*)(-?)([imsx]*)(:)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.other.non-capturing-group-begin.regexp.ballerina\" }, \"2\": { \"name\": \"keyword.other.non-capturing-group.flags-on.regexp.ballerina\" }, \"3\": { \"name\": \"punctuation.other.non-capturing-group.off.regexp.ballerina\" }, \"4\": { \"name\": \"keyword.other.non-capturing-group.flags-off.regexp.ballerina\" }, \"5\": { \"name\": \"punctuation.other.non-capturing-group-end.regexp.ballerina\" } }, \"end\": \"()\", \"name\": \"constant.other.flag.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regexp\" }, { \"include\": \"#template-substitution-element\" }] }] }, \"for-loop\": { \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))foreach\\\\s*\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.ballerina\" }, \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"match\": \"\\\\bin\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#comment\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#expression\" }] }, \"forkBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#workerDef\" }] }] }, \"forkStatement\": { \"patterns\": [{ \"begin\": \"\\\\bfork\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#forkBody\" }] }] }, \"function-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#functionParameters\" }, { \"include\": \"#decl-block\" }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" } }, \"end\": \"(?=\\\\;)|(?=\\\\,)|(?=)(?=\\\\);)\", \"name\": \"meta.block.ballerina\", \"patterns\": [{ \"include\": \"#statements\" }, { \"include\": \"#punctuation-comma\" }] }, { \"match\": \"\\\\*\", \"name\": \"keyword.generator.asterisk.ballerina\" }] }, \"function-defn\": { \"begin\": \"(?:(public|private)\\\\s+)?(function\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\;)|(?<=\\\\})|(?<=\\\\,)|(?=)(?=\\\\);)\", \"name\": \"meta.function.ballerina\", \"patterns\": [{ \"match\": \"\\\\bexternal\\\\b\", \"name\": \"keyword.ballerina\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#functionReturns\" }, { \"include\": \"#functionName\" }, { \"include\": \"#functionParameters\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#function-body\" }, { \"include\": \"#regex\" }] }, \"function-parameters-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numbers\" }, { \"include\": \"#string\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#keywords\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#regex\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameter.ballerina\" }] }, \"functionName\": { \"patterns\": [{ \"match\": \"\\\\bfunction\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#string\" }, { \"captures\": { \"2\": { \"name\": \"variable.language.this.ballerina\" }, \"3\": { \"name\": \"keyword.other.ballerina\" }, \"4\": { \"name\": \"support.type.primitive.ballerina\" }, \"5\": { \"name\": \"storage.type.ballerina\" }, \"6\": { \"name\": \"meta.definition.function.ballerina entity.name.function.ballerina\" } }, \"match\": \"\\\\s+(\\\\b(self)|\\\\b(is|new|isolated|null|function|in)\\\\b|(string|int|boolean|float|byte|decimal|json|xml|anydata)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*))\" }] }, \"functionParameters\": { \"begin\": \"\\\\(|\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \"\\\\)|\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"name\": \"meta.parameters.ballerina\", \"patterns\": [{ \"include\": \"#function-parameters-body\" }] }, \"functionReturns\": { \"begin\": \"\\\\s*(returns)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?==>)|(=)|(?=\\\\{)|(\\\\))|(?=\\\\;)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ballerina\" } }, \"name\": \"meta.type.function.return.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-primitive\" }, { \"captures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"match\": \"\\\\s*\\\\b(var)(?=\\\\s+|\\\\[|\\\\?)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.ballerina\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ballerina\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#keywords\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"variable.other.readwrite.ballerina\" }] }, \"functionType\": { \"patterns\": [{ \"begin\": \"\\\\bfunction\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=:)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#functionTypeParamList\" }, { \"include\": \"#functionTypeReturns\" }] }] }, \"functionTypeParamList\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"delimiter.parenthesis\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"delimiter.parenthesis\" } }, \"patterns\": [{ \"match\": \"public\", \"name\": \"keyword\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#parameterTuple\" }, { \"include\": \"#functionTypeType\" }, { \"include\": \"#comment\" }] }] }, \"functionTypeReturns\": { \"patterns\": [{ \"begin\": \"\\\\breturns\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\", \"patterns\": [{ \"include\": \"#functionTypeReturnsParameter\" }, { \"include\": \"#comment\" }] }] }, \"functionTypeReturnsParameter\": { \"patterns\": [{ \"begin\": \"((?=record|object|function)|(?:[_$A-Za-z][_$0-9A-Za-z]*))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?::)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#defaultValue\" }, { \"include\": \"#comment\" }, { \"include\": \"#parameterTuple\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"functionTypeType\": { \"patterns\": [{ \"begin\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\" }] }, \"identifiers\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\\\\s*)?([_$A-Za-z][_$0-9A-Za-z]*)(?=\\\\s*=\\\\s*((((function\\\\s*[(<*])|(function\\\\s+)|([_$A-Za-z][_$0-9A-Za-z]*\\\\s*=>)))|((((<\\\\s*$)|((<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*>)*>)*>\\\\s*)?[(]\\\\s*((([{\\\\[]\\\\s*)?$)|((\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>(){}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\\\([^()]+\\\\)|\\\\{[^{}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>(){}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\\\([^()]+\\\\)|\\\\{[^{}]+\\\\})+\\\\s*)?=\\\\s*))))))|((<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*>)*>)*>\\\\s*)?[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([)]\\\\s*:)|((\\\\.\\\\.\\\\.\\\\s*)?[_$A-Za-z][_$0-9A-Za-z]*\\\\s*:)))|((<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*>)*>)*>\\\\s*)?\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$A-Za-z]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)(\\\\s*:\\\\s*([^<>(){}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\\\([^()]+\\\\)|\\\\{[^{}]+\\\\})+)?\\\\s*=>)))))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\\\\s*(\\\\#?[_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=\\\\()\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"variable.other.property.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\\\\s*(\\\\#?[_$A-Za-z][_$0-9A-Za-z]*)\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#self-literal\" }, { \"match\": \"\\\\b(check|foreach|if|checkpanic)\\\\b\", \"name\": \"keyword.control.ballerina\" }, { \"include\": \"#call\" }, { \"match\": \"\\\\b(var)\\\\b\", \"name\": \"support.type.primitive.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"3\": { \"name\": \"punctuation.accessor.ballerina\" }, \"4\": { \"name\": \"entity.name.function.ballerina\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" }, \"6\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"match\": \"([_$A-Za-z][_$0-9A-Za-z]*)((\\\\.)([_$A-Za-z][_$0-9A-Za-z]*)(\\\\()(\\\\)))?\" }, { \"match\": \"(\\\\')([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#type-annotation\" }] }, \"if-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\b\\\\s*(?!\\\\{))\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.ballerina\" }, \"2\": { \"name\": \"meta.brace.round.ballerina\" } }, \"end\": \"(\\\\))|(?=\\\\{)\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.round.ballerina\" } }, \"patterns\": [{ \"include\": \"#decl-block\" }, { \"include\": \"#keywords\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#xml\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#comment\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#literal\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#regex\" }] }, { \"begin\": \"(?<=\\\\))(?=\\\\s|=)\", \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#keywords\" }] }, { \"include\": \"#decl-block\" }] }] }, \"import-clause\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.default.ballerina\" }, \"3\": { \"name\": \"variable.other.readwrite.ballerina meta.import.module.ballerina\" }, \"5\": { \"name\": \"keyword.control.default.ballerina\" }, \"6\": { \"name\": \"variable.other.readwrite.alias.ballerina\" } }, \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$A-Za-z][_$0-9A-Za-z]*))\" }, { \"match\": \"([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.readwrite.alias.ballerina\" }] }, \"import-declaration\": { \"begin\": \"\\\\bimport\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.import.ballerina\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"name\": \"meta.import.ballerina\", \"patterns\": [{ \"match\": \"(\\\\')([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#keywords\" }, { \"include\": \"#comment\" }, { \"include\": \"#import-clause\" }, { \"include\": \"#punctuation-accessor\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"\\\\b(fork|join|while|returns|transaction|transactional|retry|commit|rollback|typeof|enum|wait|match)\\\\b\", \"name\": \"keyword.control.ballerina\" }, { \"match\": \"\\\\b(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\", \"name\": \"keyword.control.flow.ballerina\" }, { \"match\": \"\\\\b(public|private|external|return|record|object|remote|abstract|client|true|false|fail|import|version)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(as|on|function|resource|listener|const|final|is|null|lock|annotation|source|worker|parameter|field|isolated|in)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(xmlns|table|key|let|new|select|start|flush|default|do|base16|base64|conflict)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(limit|outer|equals|order|by|ascending|descending|class|configurable|variable|module|service|group|collect)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"(=>)\", \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" }, { \"match\": \"(!|%|\\\\+|-|~=|===|==|=|!=|!==|<|>|&|\\\\||\\\\?:|\\\\.\\\\.\\\\.|<=|>=|&&|\\\\|\\\\||~|>>|>>>)\", \"name\": \"keyword.operator.ballerina\" }, { \"include\": \"#types\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#type-primitive\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#numbers\" }, { \"include\": \"#strings\" }, { \"include\": \"#maps\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#array-literal\" }] }, \"maps\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"matchBindingPattern\": { \"patterns\": [{ \"begin\": \"var\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?==>)|,\", \"patterns\": [{ \"include\": \"#errorDestructure\" }, { \"include\": \"#code\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"variable.parameter.ballerina\" }] }] }, \"matchStatement\": { \"patterns\": [{ \"begin\": \"\\\\bmatch\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.ballerina\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#matchStatementBody\" }, { \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"matchStatementBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#matchBindingPattern\" }, { \"include\": \"#matchStatementPatternClause\" }, { \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"matchStatementPatternClause\": { \"patterns\": [{ \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"((\\\\})|;|,)\", \"patterns\": [{ \"include\": \"#callableUnitBody\" }, { \"include\": \"#code\" }] }] }, \"mdDocumentation\": { \"begin\": \"\\\\#\", \"end\": \"[\\\\r\\\\n]+\", \"name\": \"comment.mddocs.ballerina\", \"patterns\": [{ \"include\": \"#mdDocumentationReturnParamDescription\" }, { \"include\": \"#mdDocumentationParamDescription\" }] }, \"mdDocumentationParamDescription\": { \"patterns\": [{ \"begin\": \"(\\\\+\\\\s+)(\\\\'?[_$A-Za-z][_$0-9A-Za-z]*)(\\\\s*-\\\\s+)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ballerina\" }, \"2\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"3\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\", \"patterns\": [{ \"match\": \"#.*\", \"name\": \"comment.mddocs.paramdesc.ballerina\" }] }] }, \"mdDocumentationReturnParamDescription\": { \"patterns\": [{ \"begin\": \"(#)(?: *?)(\\\\+)(?: *)(return)(?: *)(-)?(.*)\", \"beginCaptures\": { \"1\": { \"name\": \"comment.mddocs.ballerina\" }, \"2\": { \"name\": \"keyword.ballerina\" }, \"3\": { \"name\": \"keyword.ballerina\" }, \"4\": { \"name\": \"keyword.ballerina\" }, \"5\": { \"name\": \"comment.mddocs.returnparamdesc.ballerina\" } }, \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\", \"patterns\": [{ \"match\": \"#.*\", \"name\": \"comment.mddocs.returnparamdesc.ballerina\" }] }] }, \"multiType\": { \"patterns\": [{ \"match\": \"(?<=\\\\|)([_$A-Za-z][_$0-9A-Za-z]*)|([_$A-Za-z][_$0-9A-Za-z]*)(?=\\\\|)\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.ballerina\" }] }, \"numbers\": { \"patterns\": [{ \"match\": \"\\\\b0[xX][\\\\da-fA-F]+\\\\b|\\\\b\\\\d+(?:\\\\.(?:\\\\d+|$))?\", \"name\": \"constant.numeric.decimal.ballerina\" }] }, \"object-literal\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.objectliteral.ballerina\", \"patterns\": [{ \"include\": \"#object-member\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-member\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#literal\" }, { \"include\": \"#keywords\" }, { \"include\": \"#expression\" }, { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[(<]))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }] }, { \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\", \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[(<,}])|(\\\\n*})|(\\\\s+(as)\\\\s+))))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:(?:\\\\b\\\\d[0-9_]*(\\\\.)\\\\d[0-9_]*[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(\\\\.)[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\B(\\\\.)\\\\d[0-9_]*[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(\\\\.)\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(\\\\.)(n)?\\\\B)|(?:\\\\B(\\\\.)\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(n)?\\\\b(?!\\\\.)))(?!\\\\$)))\", \"end\": \"(?=:)|(?=\\\\s*([(<,}])|(\\\\s+as\\\\s+))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numbers\" }] }, { \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[(<])\", \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ballerina\", \"patterns\": [{ \"include\": \"#function-body\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" }, \"1\": { \"name\": \"constant.numeric.decimal.ballerina\" } }, \"match\": \"(?![_$A-Za-z])([\\\\d]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" }, \"1\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?:([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*((((function\\\\s*[(<*])|(function\\\\s+)|([_$A-Za-z][_$0-9A-Za-z]*\\\\s*=>)))|((((<\\\\s*$)|((<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*>)*>)*>\\\\s*)?[(]\\\\s*((([{\\\\[]\\\\s*)?$)|((\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>(){}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\\\([^()]+\\\\)|\\\\{[^{}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>(){}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\\\([^()]+\\\\)|\\\\{[^{}]+\\\\})+\\\\s*)?=\\\\s*))))))|((<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*>)*>)*>\\\\s*)?[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([)]\\\\s*:)|((\\\\.\\\\.\\\\.\\\\s*)?[_$A-Za-z][_$0-9A-Za-z]*\\\\s*:)))|((<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|<\\\\s*([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*>)*>)*>\\\\s*)?\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$A-Za-z]|(\\\\{([^{}]|(\\\\{([^{}]|\\\\{[^{}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$A-Za-z]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^()]|(\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)(\\\\s*:\\\\s*([^<>(){}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\\\([^()]+\\\\)|\\\\{[^{}]+\\\\})+)?\\\\s*=>))))))\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" } }, \"match\": \"(?:[_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.ballerina\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.ballerina\" } }, \"match\": \"([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.ballerina\" }, \"2\": { \"name\": \"storage.modifier.ballerina\" } }, \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.ballerina\" } }, \"end\": \"(?=[;),}\\\\]:?\\\\-+>]|\\\\|\\\\||\\\\&\\\\&|!==|$|^|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+))\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"(?=[_$A-Za-z][_$0-9A-Za-z]*\\\\s*=)\", \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"objectDec\": { \"patterns\": [{ \"begin\": \"\\\\bobject\\\\b(?!:)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#decl-block\" }] }] }, \"objectInitBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"objectInitParameters\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }, { \"match\": \"\\\\b([_$A-Za-z][_$0-9A-Za-z]*)\\\\b\", \"name\": \"variable.parameter.ballerina\" }] }] }, \"objectMemberFunctionDec\": { \"patterns\": [{ \"begin\": \"\\\\bfunction\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#functionParameters\" }, { \"match\": \"\\\\breturns\\\\b\", \"name\": \"keyword.ballerina\" }, { \"include\": \"#code\" }] }] }, \"parameter\": { \"patterns\": [{ \"begin\": \"((?=record|object|function)|([_$A-Za-z][_$0-9A-Za-z]*)(?=\\\\|)|(?:[_$A-Za-z][_$0-9A-Za-z]*))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:\\\\,)|(?:\\\\|)|(?::)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#parameterWithDescriptor\" }, { \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#defaultValue\" }, { \"include\": \"#comment\" }, { \"include\": \"#parameterTuple\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"parameter-name\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"match\": \"\\\\s*\\\\b(var)\\\\s+\" }, { \"captures\": { \"2\": { \"name\": \"keyword.operator.rest.ballerina\" }, \"3\": { \"name\": \"support.type.primitive.ballerina\" }, \"4\": { \"name\": \"keyword.other.ballerina\" }, \"5\": { \"name\": \"constant.language.boolean.ballerina\" }, \"6\": { \"name\": \"keyword.control.flow.ballerina\" }, \"7\": { \"name\": \"storage.type.ballerina\" }, \"8\": { \"name\": \"variable.parameter.ballerina\" }, \"9\": { \"name\": \"variable.parameter.ballerina\" }, \"10\": { \"name\": \"keyword.operator.optional.ballerina\" } }, \"match\": \"(?:(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|(string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*))(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\" }] }, \"parameterTuple\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=:)|(?==>)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#parameterTupleType\" }, { \"include\": \"#parameterTupleEnd\" }, { \"include\": \"#comment\" }] }] }, \"parameterTupleEnd\": { \"patterns\": [{ \"begin\": \"\\\\]\", \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=:)|(?==>)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#defaultWithParentheses\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"parameterTupleType\": { \"patterns\": [{ \"begin\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:\\\\,)|(?:\\\\|)|(?=\\\\])\" }] }, \"parameterWithDescriptor\": { \"patterns\": [{ \"begin\": \"\\\\&\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#parameter\" }] }] }, \"parameters\": { \"patterns\": [{ \"match\": \"\\\\s*(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\", \"name\": \"keyword.control.flow.ballerina\" }, { \"match\": \"\\\\s*(let|select)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameter.ballerina\" }] }, \"paranthesised\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ballerina\" } }, \"name\": \"meta.brace.round.block.ballerina\", \"patterns\": [{ \"include\": \"#self-literal\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#parameters\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#expression\" }, { \"include\": \"#regex\" }] }, \"paranthesisedBracket\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"punctuation-accessor\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\" }] }, \"punctuation-comma\": { \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.comma.ballerina\" }] }, \"punctuation-semicolon\": { \"patterns\": [{ \"match\": \";\", \"name\": \"punctuation.terminator.statement.ballerina\" }] }, \"record\": { \"begin\": \"\\\\brecord\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.record.ballerina\", \"patterns\": [{ \"include\": \"#recordBody\" }] }, \"recordBody\": { \"patterns\": [{ \"include\": \"#decl-block\" }] }, \"recordLiteral\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }] }] }, \"regex\": { \"patterns\": [{ \"begin\": \"(\\\\bre)(\\\\s*)(`)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"punctuation.definition.regexp.template.begin.ballerina\" } }, \"end\": \"`\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.regexp.template.end.ballerina\" } }, \"name\": \"regexp.template.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#regexp\" }] }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdDtrn]|\\\\.\", \"name\": \"keyword.other.character-class.regexp.ballerina\" }, { \"match\": \"\\\\\\\\[^pPu]\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"regex-unicode-properties-general-category\": { \"patterns\": [{ \"match\": \"(Lu|Ll|Lt|Lm|Lo|L|Mn|Mc|Me|M|Nd|Nl|No|N|Pc|Pd|Ps|Pe|Pi|Pf|Po|P|Sm|Sc|Sk|So|S|Zs|Zl|Zp|Z|Cf|Cc|Cn|Co|C)\", \"name\": \"constant.other.unicode-property-general-category.regexp.ballerina\" }] }, \"regex-unicode-property-key\": { \"patterns\": [{ \"begin\": \"(sc=|gc=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\" } }, \"end\": \"()\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regex-unicode-properties-general-category\" }] }] }, \"regexp\": { \"patterns\": [{ \"match\": \"\\\\^|\\\\$\", \"name\": \"keyword.control.assertion.regexp.ballerina\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp.ballerina\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp.ballerina\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp.ballerina\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp.ballerina\" } }, \"name\": \"meta.group.assertion.regexp.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#regexp\" }, { \"include\": \"#flags-on-off\" }, { \"include\": \"#unicode-property-escape\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.start.regexp.ballerina\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp.ballerina\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.end.regexp.ballerina\" } }, \"name\": \"constant.other.character-class.set.regexp.ballerina\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"3\": { \"name\": \"constant.character.numeric.regexp\" }, \"4\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))\", \"name\": \"constant.other.character-class.range.regexp.ballerina\" }, { \"include\": \"#regex-character-class\" }, { \"include\": \"#unicode-values\" }, { \"include\": \"#unicode-property-escape\" }] }, { \"include\": \"#template-substitution-element\" }, { \"include\": \"#regex-character-class\" }, { \"include\": \"#unicode-values\" }, { \"include\": \"#unicode-property-escape\" }] }, \"self-literal\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.language.this.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(\\\\bself\\\\b)\\\\s*(.)\\\\s*([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=\\\\()\" }, { \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))self\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.ballerina\" }] }, \"service-decl\": { \"begin\": \"\\\\bservice\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|(?<=\\\\})|(?<=\\\\,)\", \"name\": \"meta.service.declaration.ballerina\", \"patterns\": [{ \"include\": \"#class-defn\" }, { \"include\": \"#serviceName\" }, { \"include\": \"#serviceOn\" }, { \"include\": \"#serviceBody\" }, { \"include\": \"#objectDec\" }] }, \"serviceBody\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#documentationDef\" }, { \"include\": \"#decl-block\" }] }, \"serviceName\": { \"patterns\": [{ \"include\": \"#string\" }, { \"match\": '(\\\\/([_$A-Za-z][_$0-9A-Za-z]*)|\\\\\"[_$A-Za-z][_$0-9A-Za-z]*\\\\\")', \"name\": \"entity.service.path.ballerina\" }] }, \"serviceOn\": { \"patterns\": [{ \"begin\": \"on\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?={)\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"source\": { \"patterns\": [{ \"begin\": \"(\\\\bsource\\\\b)\\\\s+([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"variable.other.readwrite.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\;)\" }] }, \"statements\": { \"patterns\": [{ \"include\": \"#stringTemplate\" }, { \"include\": \"#declaration\" }, { \"include\": \"#control-statement\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#regex\" }] }, \"string\": { \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ballerina\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ballerina\" }, \"2\": { \"name\": \"invalid.illegal.newline.ballerina\" } }, \"name\": \"string.quoted.double.ballerina\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }] }, \"string-character-escape\": { \"patterns\": [{ \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.ballerina\" }] }, \"stringTemplate\": { \"patterns\": [{ \"begin\": \"((string)|([_$A-Za-z][_$0-9A-Za-z]*))?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.ballerina\" }, \"2\": { \"name\": \"support.type.primitive.ballerina\" }, \"4\": { \"name\": \"punctuation.definition.string.template.begin.ballerina\" } }, \"end\": \"\\\\\\\\?`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.template.end.ballerina\" } }, \"name\": \"string.template.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"strings\": { \"patterns\": [{ \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"template-substitution-element\": { \"patterns\": [{ \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.ballerina\" } }, \"contentName\": \"meta.embedded.line.ballerina\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.ballerina\" } }, \"name\": \"meta.template.expression.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"templateVariable\": { \"patterns\": [{ \"begin\": \"\\\\${\", \"beginCaptures\": { \"0\": { \"name\": \"constant.character.escape.ballerina\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"constant.character.escape.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }] }] }, \"ternary-expression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^\\\\d])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ballerina\" } }, \"end\": \"\\\\s*\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ballerina\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"tupleType\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"(?=\\\\]|;)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#paranthesisedBracket\" }, { \"match\": \"\\\\b([_$A-Za-z][_$0-9A-Za-z]*)\\\\b\", \"name\": \"storage.type.ballerina\" }] }] }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#type-tuple\" }] }, \"type-annotation\": { \"patterns\": [{ \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ballerina\" } }, \"end\": \"(?<![:|&])((?=$|^|[,);}\\\\]?>=>]|//)|(?==[^>])|((?<=[}>\\\\])]|[_$A-Za-z])\\\\s*(?=\\\\{)))(\\\\?)?\", \"name\": \"meta.type.annotation.ballerina\", \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#regex\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#xml\" }, { \"include\": \"#call\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"constant.language.boolean.ballerina\" }, \"3\": { \"name\": \"keyword.control.ballerina\" }, \"4\": { \"name\": \"storage.type.ballerina\" }, \"5\": { \"name\": \"support.type.primitive.ballerina\" }, \"6\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"8\": { \"name\": \"punctuation.accessor.ballerina\" }, \"9\": { \"name\": \"entity.name.function.ballerina\" }, \"10\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" }, \"11\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"match\": \"\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|\\\\b(var)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*)((\\\\.)([_$A-Za-z][_$0-9A-Za-z]*)(\\\\()(\\\\)))?\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ballerina\" }, { \"include\": \"#multiType\" }, { \"include\": \"#type\" }, { \"include\": \"#paranthesised\" }] }] }, \"type-primitive\": { \"patterns\": [{ \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|int|boolean|float|byte|decimal|json|xml|anydata)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.primitive.ballerina\" }] }, \"type-tuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"name\": \"meta.type.tuple.ballerina\", \"patterns\": [{ \"include\": \"#self-literal\" }, { \"include\": \"#booleans\" }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.rest.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.ballerina\" }, \"2\": { \"name\": \"keyword.operator.optional.ballerina\" }, \"3\": { \"name\": \"punctuation.separator.label.ballerina\" } }, \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(\\\\?)?\\\\s*(:)\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"typeDefinition\": { \"patterns\": [{ \"begin\": \"(\\\\btype\\\\b)\\\\s+([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"entity.name.type.ballerina\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"patterns\": [{ \"include\": \"#functionParameters\" }, { \"include\": \"#functionReturns\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#record\" }, { \"include\": \"#string\" }, { \"include\": \"#keywords\" }, { \"include\": \"#multiType\" }, { \"include\": \"#type-primitive\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"variable.other.readwrite.ballerina\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#typeDescription\" }, { \"include\": \"#decl-block\" }] }] }, \"typeDescription\": { \"patterns\": [{ \"begin\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"end\": \"(?=;)\", \"patterns\": [{ \"include\": \"#numbers\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#type-primitive\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"storage.type.ballerina\" }] }] }, \"types\": { \"patterns\": [{ \"match\": \"\\\\b(handle|any|future|typedesc)\\\\b\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\b(boolean|int|string|float|decimal|byte|json|xml|anydata)\\\\b\", \"name\": \"support.type.primitive.ballerina\" }, { \"match\": \"\\\\b(map|error|never|readonly|distinct)\\\\b\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\b(stream)\\\\b\", \"name\": \"storage.type.ballerina\" }] }, \"unicode-property-escape\": { \"patterns\": [{ \"begin\": \"(\\\\\\\\p|\\\\\\\\P)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-property.regexp.ballerina\" }, \"2\": { \"name\": \"punctuation.other.unicode-property.begin.regexp.ballerina\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-property.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regex-unicode-properties-general-category\" }, { \"include\": \"#regex-unicode-property-key\" }] }] }, \"unicode-values\": { \"patterns\": [{ \"begin\": \"(\\\\\\\\u)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-value.regexp.ballerina\" }, \"2\": { \"name\": \"punctuation.other.unicode-value.begin.regexp.ballerina\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-value.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-value.ballerina\", \"patterns\": [{ \"match\": \"([0-9A-Fa-f]{1,6})\", \"name\": \"constant.other.unicode-value.regexp.ballerina\" }] }] }, \"var-expr\": { \"patterns\": [{ \"begin\": \"(?=\\\\b(var))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.modifier.ballerina support.type.primitive.ballerina\" } }, \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=(if)\\\\s+))|((?<!^string|[^\\\\._$0-9A-Za-z]string|^int|[^\\\\._$0-9A-Za-z]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"begin\": \"\\\\b(var)(?=\\\\s+|\\\\[|\\\\?|\\\\||:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.type.annotation.ballerina\" }, { \"match\": \"\\\\bin\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#numbers\" }, { \"include\": \"#multiType\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#regex\" }] }, { \"include\": \"#punctuation-comma\" }, { \"begin\": \"(?=\\\\b(const(?!\\\\s+enum\\\\b)))\", \"end\": \"(?!\\\\b(const(?!\\\\s+enum\\\\b)))((?=\\\\bannotation\\\\b|;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$0-9A-Za-z]string|^int|[^\\\\._$0-9A-Za-z]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"begin\": \"\\\\b(const(?!\\\\s+enum\\\\b))\\\\s+\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }] }, { \"include\": \"#punctuation-comma\" }, { \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$0-9A-Za-z]string|^int|[^\\\\._$0-9A-Za-z]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"include\": \"#xml\" }, { \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.type.annotation.ballerina\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#numbers\" }, { \"include\": \"#multiType\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#regex\" }] }, { \"include\": \"#punctuation-comma\" }] }, \"var-single-const\": { \"patterns\": [{ \"name\": \"meta.var-single-variable.expr.ballerina\" }, { \"begin\": \"\\\\b(var)\\\\s*\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#types\" }, { \"begin\": \"([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ballerina variable.other.constant.ballerina\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\" }] }, \"var-single-variable\": { \"patterns\": [{ \"begin\": \"((string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(readonly|error|map)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*))(?=\\\\s+|\\\\;|>|\\\\|)\", \"beginCaptures\": { \"2\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"storage.type.ballerina\" }, \"4\": { \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\" } }, \"end\": \"(?=$|^|[;,=}])\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"name\": \"meta.var-single-variable.expr.ballerina\", \"patterns\": [{ \"include\": \"#call\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#if-statement\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#keywords\" }] }, { \"begin\": \"([_$A-Za-z][_$0-9A-Za-z]*)\\\\s+(!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.ballerina\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\", \"name\": \"meta.var-single-variable.expr.ballerina\" }] }, \"variable-initializer\": { \"patterns\": [{ \"begin\": \"(?<!=|!)(=)(?!=|>)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ballerina\" } }, \"end\": \"(?=$|[,);}\\\\]])\", \"patterns\": [{ \"match\": \"(\\\\')([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#xml\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-accessor\" }, { \"include\": \"#regex\" }] }, { \"begin\": \"(?<!=|!)(=)(?!=|>)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ballerina\" } }, \"end\": \"(?=[,);}\\\\]]|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))|(?=^\\\\s*$)|(?<=\\\\S)(?<!=)(?=\\\\s*$)\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"variableDef\": { \"patterns\": [{ \"begin\": \"(?:(?!\\\\+)[_$A-Za-z][_$0-9A-Za-z]*)(?: |\\\\t)|(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:[_$A-Za-z][_$0-9A-Za-z]*)|(?=\\\\,)|(?=;)|\\\\.\\\\.\\\\.\", \"patterns\": [{ \"include\": \"#tupleType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#comment\" }] }] }, \"variableDefInline\": { \"patterns\": [{ \"begin\": \"(?=record)|(?=object)\", \"end\": \"(?=;)\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }] }] }, \"workerBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"workerDef\": { \"patterns\": [{ \"begin\": \"\\\\bworker\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#functionReturns\" }, { \"include\": \"#workerBody\" }] }] }, \"xml\": { \"patterns\": [{ \"begin\": \"(\\\\bxml)(\\\\s*)(`)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"punctuation.definition.string.template.begin.ballerina\" } }, \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.template.end.ballerina\" } }, \"name\": \"string.template.ballerina\", \"patterns\": [{ \"include\": \"#xmlTag\" }, { \"include\": \"#xmlComment\" }, { \"include\": \"#templateVariable\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlComment\": { \"patterns\": [{ \"begin\": \"<!--\", \"beginCaptures\": { \"0\": { \"name\": \"comment.block.xml.ballerina\" } }, \"end\": \"-->\", \"endCaptures\": { \"0\": { \"name\": \"comment.block.xml.ballerina\" } }, \"name\": \"comment.block.xml.ballerina\" }] }, \"xmlDoubleQuotedString\": { \"patterns\": [{ \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlSingleQuotedString\": { \"patterns\": [{ \"begin\": \"\\\\'\", \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": \"\\\\'\", \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlTag\": { \"patterns\": [{ \"begin\": \"(<\\\\/?\\\\??)\\\\s*([-_a-zA-Z0-9]+)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.xml.ballerina\" }, \"2\": { \"name\": \"entity.name.tag.xml.ballerina\" } }, \"end\": \"\\\\??\\\\/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.xml.ballerina\" } }, \"patterns\": [{ \"include\": \"#xmlSingleQuotedString\" }, { \"include\": \"#xmlDoubleQuotedString\" }, { \"match\": \"xmlns\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"([a-zA-Z0-9-]+)\", \"name\": \"entity.other.attribute-name.xml.ballerina\" }] }] } }, \"scopeName\": \"source.ballerina\" });\nvar ballerina = [\n  lang\n];\n\nexport { ballerina as default };\n"],"names":["ballerina","Object","freeze"],"sourceRoot":""}