{"version":3,"file":"static/chunks/5789.42b914acaea85c2f.js","mappings":"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","sources":["webpack://_N_E/./node_modules/shiki/dist/langs/razor.mjs"],"sourcesContent":["import html from './html.mjs';\nimport csharp from './csharp.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"ASP.NET Razor\", \"fileTypes\": [\"razor\", \"cshtml\"], \"injections\": { \"string.quoted.double.html\": { \"patterns\": [{ \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#implicit-expression\" }] }, \"string.quoted.single.html\": { \"patterns\": [{ \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#implicit-expression\" }] } }, \"name\": \"razor\", \"patterns\": [{ \"include\": \"#razor-control-structures\" }, { \"include\": \"text.html.basic\" }], \"repository\": { \"addTagHelper-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.addTagHelper\" }, \"3\": { \"patterns\": [{ \"include\": \"#tagHelper-directive-argument\" }] } }, \"match\": \"(@)(addTagHelper)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"attribute-directive\": { \"begin\": \"(@)(attribute)\\\\b\\\\s+\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.attribute\" } }, \"end\": \"(?<=\\\\])|$\", \"name\": \"meta.directive\", \"patterns\": [{ \"include\": \"source.cs#attribute-section\" }] }, \"await-prefix\": { \"match\": \"(await)\\\\s+\", \"name\": \"keyword.other.await.cs\" }, \"balanced-brackets-csharp\": { \"begin\": \"(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.squarebracket.open.cs\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.squarebracket.close.cs\" } }, \"name\": \"razor.test.balanced.brackets\", \"patterns\": [{ \"include\": \"source.cs\" }] }, \"balanced-parenthesis-csharp\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"name\": \"razor.test.balanced.parenthesis\", \"patterns\": [{ \"include\": \"source.cs\" }] }, \"catch-clause\": { \"begin\": \"(?:^|(?<=}))\\\\s*(catch)\\\\b\\\\s*?(?=[\\\\n({])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.try.catch.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.catch.razor\", \"patterns\": [{ \"include\": \"#catch-condition\" }, { \"include\": \"source.cs#when-clause\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"catch-condition\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] }, \"6\": { \"name\": \"entity.name.variable.local.cs\" } }, \"match\": \"(?<type-name>(?:(?:(?:(?<identifier>@?[_A-Za-z][_0-9A-Za-z]*)\\\\s*::\\\\s*)?(?<name-and-type-args>\\\\g<identifier>\\\\s*(?<type-args>\\\\s*<(?:[^<>]|\\\\g<type-args>)+>\\\\s*)?)(?:\\\\s*\\\\.\\\\s*\\\\g<name-and-type-args>)*|(?<tuple>\\\\s*\\\\((?:[^()]|\\\\g<tuple>)+\\\\)))(?:\\\\s*\\\\?\\\\s*)?(?:\\\\s*\\\\[(?:\\\\s*,\\\\s*)*\\\\]\\\\s*)*))\\\\s*(?:(\\\\g<identifier>)\\\\b)?\" }] }, \"code-directive\": { \"begin\": \"(@)(code)((?=\\\\{)|\\\\s+)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.code\" } }, \"end\": \"(?<=})|\\\\s\", \"patterns\": [{ \"include\": \"#directive-codeblock\" }] }, \"csharp-code-block\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.open.cs\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.close.cs\" } }, \"name\": \"meta.structure.razor.csharp.codeblock\", \"patterns\": [{ \"include\": \"#razor-codeblock-body\" }] }, \"csharp-condition\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"patterns\": [{ \"include\": \"source.cs#local-variable-declaration\" }, { \"include\": \"source.cs#expression\" }, { \"include\": \"source.cs#punctuation-comma\" }, { \"include\": \"source.cs#punctuation-semicolon\" }] }, \"directive-codeblock\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.open\" } }, \"contentName\": \"source.cs\", \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.close\" } }, \"name\": \"meta.structure.razor.directive.codeblock\", \"patterns\": [{ \"include\": \"source.cs#class-or-struct-members\" }] }, \"directive-markupblock\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.open\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.close\" } }, \"name\": \"meta.structure.razor.directive.markblock\", \"patterns\": [{ \"include\": \"$self\" }] }, \"directives\": { \"patterns\": [{ \"include\": \"#code-directive\" }, { \"include\": \"#functions-directive\" }, { \"include\": \"#page-directive\" }, { \"include\": \"#addTagHelper-directive\" }, { \"include\": \"#removeTagHelper-directive\" }, { \"include\": \"#tagHelperPrefix-directive\" }, { \"include\": \"#model-directive\" }, { \"include\": \"#inherits-directive\" }, { \"include\": \"#implements-directive\" }, { \"include\": \"#namespace-directive\" }, { \"include\": \"#inject-directive\" }, { \"include\": \"#attribute-directive\" }, { \"include\": \"#section-directive\" }, { \"include\": \"#layout-directive\" }, { \"include\": \"#using-directive\" }, { \"include\": \"#rendermode-directive\" }, { \"include\": \"#preservewhitespace-directive\" }, { \"include\": \"#typeparam-directive\" }] }, \"do-statement\": { \"begin\": \"(?:(@))(do)\\\\b\\\\s\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.do.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.do.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"do-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(do)\\\\b\\\\s\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.do.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.do.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"else-part\": { \"begin\": \"(?:^|(?<=}))\\\\s*(else)\\\\b\\\\s*?(?: (if))?\\\\s*?(?=[\\\\n({])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.else.cs\" }, \"2\": { \"name\": \"keyword.control.conditional.if.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.else.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"escaped-transition\": { \"match\": \"@@\", \"name\": \"constant.character.escape.razor.transition\" }, \"explicit-razor-expression\": { \"begin\": \"(@)\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.cshtml\" }, \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.cshtml\" } }, \"name\": \"meta.expression.explicit.cshtml\", \"patterns\": [{ \"include\": \"source.cs#expression\" }] }, \"finally-clause\": { \"begin\": \"(?:^|(?<=}))\\\\s*(finally)\\\\b\\\\s*?(?=[\\\\n{])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.try.finally.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.finally.razor\", \"patterns\": [{ \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"for-statement\": { \"begin\": \"(?:(@))(for)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.for.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.for.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"for-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(for)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.for.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.for.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"foreach-condition\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.var.cs\" }, \"2\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] }, \"7\": { \"name\": \"entity.name.variable.local.cs\" }, \"8\": { \"name\": \"keyword.control.loop.in.cs\" } }, \"match\": \"(?:(\\\\bvar\\\\b)|(?<type-name>(?:(?:(?:(?<identifier>@?[_A-Za-z][_0-9A-Za-z]*)\\\\s*::\\\\s*)?(?<name-and-type-args>\\\\g<identifier>\\\\s*(?<type-args>\\\\s*<(?:[^<>]|\\\\g<type-args>)+>\\\\s*)?)(?:\\\\s*\\\\.\\\\s*\\\\g<name-and-type-args>)*|(?<tuple>\\\\s*\\\\((?:[^()]|\\\\g<tuple>)+\\\\)))(?:\\\\s*\\\\?\\\\s*)?(?:\\\\s*\\\\[(?:\\\\s*,\\\\s*)*\\\\]\\\\s*)*)))\\\\s+(\\\\g<identifier>)\\\\s+\\\\b(in)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.var.cs\" }, \"2\": { \"patterns\": [{ \"include\": \"source.cs#tuple-declaration-deconstruction-element-list\" }] }, \"3\": { \"name\": \"keyword.control.loop.in.cs\" } }, \"match\": \"(?:\\\\b(var)\\\\b\\\\s*)?(?<tuple>\\\\((?:[^()]|\\\\g<tuple>)+\\\\))\\\\s+\\\\b(in)\\\\b\" }, { \"include\": \"source.cs#expression\" }] }, \"foreach-statement\": { \"begin\": \"(?:(@)(await\\\\s+)?)(foreach)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#await-prefix\" }] }, \"3\": { \"name\": \"keyword.control.loop.foreach.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.foreach.razor\", \"patterns\": [{ \"include\": \"#foreach-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"foreach-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@)(await\\\\s+)?)(foreach)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#await-prefix\" }] }, \"3\": { \"name\": \"keyword.control.loop.foreach.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.foreach.razor\", \"patterns\": [{ \"include\": \"#foreach-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"functions-directive\": { \"begin\": \"(@)(functions)((?=\\\\{)|\\\\s+)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.functions\" } }, \"end\": \"(?<=})|\\\\s\", \"patterns\": [{ \"include\": \"#directive-codeblock\" }] }, \"if-statement\": { \"begin\": \"(?:(@))(if)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.conditional.if.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.if.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"if-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(if)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.conditional.if.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.if.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"implements-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.implements\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(implements)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"implicit-expression\": { \"begin\": \"(?<![A-Za-z0-9A-Za-z])(@)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] } }, \"contentName\": \"source.cs\", \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"name\": \"meta.expression.implicit.cshtml\", \"patterns\": [{ \"include\": \"#await-prefix\" }, { \"include\": \"#implicit-expression-body\" }] }, \"implicit-expression-accessor\": { \"match\": \"(?<=\\\\.)[_A-Za-z][_0-9A-Za-z]*\", \"name\": \"variable.other.object.property.cs\" }, \"implicit-expression-accessor-start\": { \"begin\": \"([_A-Za-z][_0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.object.cs\" } }, \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#implicit-expression-continuation\" }] }, \"implicit-expression-body\": { \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#implicit-expression-invocation-start\" }, { \"include\": \"#implicit-expression-accessor-start\" }] }, \"implicit-expression-continuation\": { \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#balanced-parenthesis-csharp\" }, { \"include\": \"#balanced-brackets-csharp\" }, { \"include\": \"#implicit-expression-invocation\" }, { \"include\": \"#implicit-expression-accessor\" }, { \"include\": \"#implicit-expression-extension\" }] }, \"implicit-expression-dot-operator\": { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.cs\" } }, \"match\": \"(\\\\.)(?=[_A-Za-z][_0-9A-Za-z]*)\" }, \"implicit-expression-invocation\": { \"match\": \"(?<=\\\\.)[_A-Za-z][_0-9A-Za-z]*(?=\\\\()\", \"name\": \"entity.name.function.cs\" }, \"implicit-expression-invocation-start\": { \"begin\": \"([_A-Za-z][_0-9A-Za-z]*)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.cs\" } }, \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#implicit-expression-continuation\" }] }, \"implicit-expression-null-conditional-operator\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.null-conditional.cs\" } }, \"match\": \"(\\\\?)(?=[.\\\\[])\" }, \"implicit-expression-null-forgiveness-operator\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.cs\" } }, \"match\": \"(!)(?=(?:\\\\.[_A-Za-z][_0-9A-Za-z]*)|\\\\?|[\\\\[(])\" }, \"implicit-expression-operator\": { \"patterns\": [{ \"include\": \"#implicit-expression-dot-operator\" }, { \"include\": \"#implicit-expression-null-conditional-operator\" }, { \"include\": \"#implicit-expression-null-forgiveness-operator\" }] }, \"inherits-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.inherits\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(inherits)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"inject-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.inject\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] }, \"4\": { \"name\": \"entity.name.variable.property.cs\" } }, \"match\": \"(@)(inject)\\\\s*([\\\\S\\\\s]+?)?\\\\s*([_A-Za-z][_0-9A-Za-z]*)?\\\\s*(?=$)\", \"name\": \"meta.directive\" }, \"layout-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.layout\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(layout)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"lock-statement\": { \"begin\": \"(?:(@))(lock)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.lock.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.lock.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"lock-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(lock)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.lock.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.lock.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"model-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.model\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(model)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"namespace-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.namespace\" }, \"3\": { \"patterns\": [{ \"include\": \"#namespace-directive-argument\" }] } }, \"match\": \"(@)(namespace)\\\\s+([^\\\\s]+)?\", \"name\": \"meta.directive\" }, \"namespace-directive-argument\": { \"captures\": { \"1\": { \"name\": \"entity.name.type.namespace.cs\" }, \"2\": { \"name\": \"punctuation.accessor.cs\" } }, \"match\": \"([_A-Za-z][_0-9A-Za-z]*)(\\\\.)?\" }, \"non-void-tag\": { \"begin\": \"(?=<(!)?([^/\\\\s>]+)(\\\\s|/?>))\", \"end\": \"(</)(\\\\2)\\\\s*(>)|(/>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"patterns\": [{ \"begin\": \"(<)(!)?([^/\\\\s>]+)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"constant.character.escape.razor.tagHelperOptOut\" }, \"3\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"(?=/?>)\", \"patterns\": [{ \"include\": \"#razor-control-structures\" }, { \"include\": \"text.html.basic#attribute\" }] }, { \"begin\": \">\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?=</)\", \"patterns\": [{ \"include\": \"#wellformed-html\" }, { \"include\": \"$self\" }] }] }, \"optionally-transitioned-csharp-control-structures\": { \"patterns\": [{ \"include\": \"#using-statement-with-optional-transition\" }, { \"include\": \"#if-statement-with-optional-transition\" }, { \"include\": \"#else-part\" }, { \"include\": \"#foreach-statement-with-optional-transition\" }, { \"include\": \"#for-statement-with-optional-transition\" }, { \"include\": \"#while-statement\" }, { \"include\": \"#switch-statement-with-optional-transition\" }, { \"include\": \"#lock-statement-with-optional-transition\" }, { \"include\": \"#do-statement-with-optional-transition\" }, { \"include\": \"#try-statement-with-optional-transition\" }] }, \"optionally-transitioned-razor-control-structures\": { \"patterns\": [{ \"include\": \"#razor-comment\" }, { \"include\": \"#razor-codeblock\" }, { \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#escaped-transition\" }, { \"include\": \"#directives\" }, { \"include\": \"#optionally-transitioned-csharp-control-structures\" }, { \"include\": \"#implicit-expression\" }] }, \"page-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.page\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#string-literal\" }] } }, \"match\": \"(@)(page)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"preservewhitespace-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.preservewhitespace\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#boolean-literal\" }] } }, \"match\": \"(@)(preservewhitespace)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"razor-codeblock\": { \"begin\": \"(@)(\\\\{)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.codeblock.open\" } }, \"contentName\": \"source.cs\", \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.close\" } }, \"name\": \"meta.structure.razor.codeblock\", \"patterns\": [{ \"include\": \"#razor-codeblock-body\" }] }, \"razor-codeblock-body\": { \"patterns\": [{ \"include\": \"#text-tag\" }, { \"include\": \"#wellformed-html\" }, { \"include\": \"#razor-single-line-markup\" }, { \"include\": \"#optionally-transitioned-razor-control-structures\" }, { \"include\": \"source.cs\" }] }, \"razor-comment\": { \"begin\": \"(@)(\\\\*)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.comment.star\" } }, \"contentName\": \"comment.block.razor\", \"end\": \"(\\\\*)(@)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.comment.star\" }, \"2\": { \"patterns\": [{ \"include\": \"#transition\" }] } }, \"name\": \"meta.comment.razor\" }, \"razor-control-structures\": { \"patterns\": [{ \"include\": \"#razor-comment\" }, { \"include\": \"#razor-codeblock\" }, { \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#escaped-transition\" }, { \"include\": \"#directives\" }, { \"include\": \"#transitioned-csharp-control-structures\" }, { \"include\": \"#implicit-expression\" }] }, \"razor-single-line-markup\": { \"captures\": { \"1\": { \"name\": \"keyword.control.razor.singleLineMarkup\" }, \"2\": { \"patterns\": [{ \"include\": \"#razor-control-structures\" }, { \"include\": \"text.html.basic\" }] } }, \"match\": \"(\\\\@:)([^$]*)$\" }, \"removeTagHelper-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.removeTagHelper\" }, \"3\": { \"patterns\": [{ \"include\": \"#tagHelper-directive-argument\" }] } }, \"match\": \"(@)(removeTagHelper)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"rendermode-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.rendermode\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(rendermode)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"section-directive\": { \"begin\": \"(@)(section)\\\\b\\\\s+([_A-Za-z][_0-9A-Za-z]*)?\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.section\" }, \"3\": { \"name\": \"variable.other.razor.directive.sectionName\" } }, \"end\": \"(?<=})\", \"name\": \"meta.directive.block\", \"patterns\": [{ \"include\": \"#directive-markupblock\" }] }, \"switch-code-block\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.open.cs\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.close.cs\" } }, \"name\": \"meta.structure.razor.csharp.codeblock.switch\", \"patterns\": [{ \"include\": \"source.cs#switch-label\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"switch-statement\": { \"begin\": \"(?:(@))(switch)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.switch.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.switch.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#switch-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"switch-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(switch)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.switch.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.switch.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#switch-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"tagHelper-directive-argument\": { \"patterns\": [{ \"include\": \"source.cs#string-literal\" }, { \"include\": \"#unquoted-string-argument\" }] }, \"tagHelperPrefix-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.tagHelperPrefix\" }, \"3\": { \"patterns\": [{ \"include\": \"#tagHelper-directive-argument\" }] } }, \"match\": \"(@)(tagHelperPrefix)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"text-tag\": { \"begin\": \"(<text\\\\s*>)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.cshtml.transition.textTag.open\" } }, \"end\": \"(</text>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.cshtml.transition.textTag.close\" } }, \"patterns\": [{ \"include\": \"#wellformed-html\" }, { \"include\": \"$self\" }] }, \"transition\": { \"match\": \"@\", \"name\": \"keyword.control.cshtml.transition\" }, \"transitioned-csharp-control-structures\": { \"patterns\": [{ \"include\": \"#using-statement\" }, { \"include\": \"#if-statement\" }, { \"include\": \"#else-part\" }, { \"include\": \"#foreach-statement\" }, { \"include\": \"#for-statement\" }, { \"include\": \"#while-statement\" }, { \"include\": \"#switch-statement\" }, { \"include\": \"#lock-statement\" }, { \"include\": \"#do-statement\" }, { \"include\": \"#try-statement\" }] }, \"try-block\": { \"begin\": \"(?:(@))(try)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.try.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.try.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"try-block-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(try)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.try.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.try.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"try-statement\": { \"patterns\": [{ \"include\": \"#try-block\" }, { \"include\": \"#catch-clause\" }, { \"include\": \"#finally-clause\" }] }, \"try-statement-with-optional-transition\": { \"patterns\": [{ \"include\": \"#try-block-with-optional-transition\" }, { \"include\": \"#catch-clause\" }, { \"include\": \"#finally-clause\" }] }, \"typeparam-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.typeparam\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(typeparam)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"unquoted-string-argument\": { \"match\": \"[^$]+\", \"name\": \"string.quoted.double.cs\" }, \"using-alias-directive\": { \"captures\": { \"1\": { \"name\": \"entity.name.type.alias.cs\" }, \"2\": { \"name\": \"keyword.operator.assignment.cs\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"([_A-Za-z][_0-9A-Za-z]*)\\\\b\\\\s*(=)\\\\s*(.+)\\\\s*\" }, \"using-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.using.cs\" }, \"3\": { \"patterns\": [{ \"include\": \"#using-static-directive\" }, { \"include\": \"#using-alias-directive\" }, { \"include\": \"#using-standard-directive\" }] }, \"4\": { \"name\": \"keyword.control.razor.optionalSemicolon\" } }, \"match\": \"(@)(using)\\\\b\\\\s+(?!\\\\(|\\\\s)(.+?)?(;)?$\", \"name\": \"meta.directive\" }, \"using-standard-directive\": { \"captures\": { \"1\": { \"name\": \"entity.name.type.namespace.cs\" } }, \"match\": \"([_A-Za-z][_0-9A-Za-z]*)\\\\s*\" }, \"using-statement\": { \"begin\": \"(?:(@))(using)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.using.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.using.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"using-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(using)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.using.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.using.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"using-static-directive\": { \"captures\": { \"1\": { \"name\": \"keyword.other.static.cs\" }, \"2\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(static)\\\\b\\\\s+(.+)\" }, \"void-tag\": { \"begin\": \"(?i)(<)(!)?(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"constant.character.escape.razor.tagHelperOptOut\" }, \"3\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.$3.void.html\", \"patterns\": [{ \"include\": \"text.html.basic#attribute\" }] }, \"wellformed-html\": { \"patterns\": [{ \"include\": \"#void-tag\" }, { \"include\": \"#non-void-tag\" }] }, \"while-statement\": { \"begin\": \"(?:(@)|^\\\\s*|(?<=})\\\\s*)(while)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.while.cs\" } }, \"end\": \"(?<=})|(;)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.cs\" } }, \"name\": \"meta.statement.while.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] } }, \"scopeName\": \"text.aspnetcorerazor\", \"embeddedLangs\": [\"html\", \"csharp\"] });\nvar razor = [\n  ...html,\n  ...csharp,\n  lang\n];\n\nexport { razor as default };\n"],"names":["lang","Object","freeze","razor","_html_mjs__WEBPACK_IMPORTED_MODULE_0__","_csharp_mjs__WEBPACK_IMPORTED_MODULE_1__"],"sourceRoot":""}