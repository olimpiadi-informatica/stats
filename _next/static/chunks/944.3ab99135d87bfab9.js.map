{"version":3,"file":"static/chunks/944.3ab99135d87bfab9.js","mappings":"oIACA,IAAAA,EAAA,CADAC,OAAAC,MAAA,EAA6B,0DAA0E,uBAA0B,aAAmB,kBAAoB,WAAe,2BAA8B,CAAI,uCAA0C,EAAG,8BAAkC,yBAAiC,GAAO,mCAAuC,UAAa,aAAoB,GAAO,yCAA6C,WAAiB,uBAA0B,EAAG,qBAAyB,qCAA6C,GAAO,mCAAuC,UAAa,aAAoB,GAAO,4CAAgD,WAAiB,2BAAmC,GAAO,oDAAwD,cAAgB,WAAmB,2BAAmC,GAAO,oDAAwD,cAAgB,WAAmB,yBAA4B,CAAI,kCAAqC,CAAI,mBAAsB,EAAG,CAAI,uBAA0B,EAAG,CAAI,oCAAwC,WAAmB,yBAA4B,CAAI,kCAAqC,CAAI,mBAAsB,EAAG,CAAI,mBAAsB,EAAG,kBAAsB,WAAe,0FAAiG,CAAI,aAAgB,CAAI,0BAA6B,CAAI,0BAA6B,EAAG,yBAA6B,uFAA8F,oBAAwB,WAAe,8BAAiC,CAAI,yBAA4B,CAAI,2BAA8B,CAAI,mBAAsB,EAAG,sBAA0B,gBAAgB,wCAAuB,WAAwC,cAAc,eAAuB,GAAO,4CAAgD,YAAc,aAAqB,GAAO,4CAAgD,WAAiB,6BAAgC,EAAG,CAAI,iBAAiB,wCAAuB,WAAwC,4BAA+B,EAAG,EAAG,mCAAuC,WAAe,iBAAiB,wCAAuB,WAAwC,4BAA+B,EAAG,CAAI,yBAA8B,aAAoB,GAAO,4CAAgD,WAAiB,6BAAgC,EAAG,EAAG,oBAAwB,WAAe,8DAA6C,WAAwC,iCAAyC,GAAO,2BAA+B,cAAgB,WAAmB,mBAAsB,EAAG,CAAI,+BAAkC,CAAI,mBAAsB,EAAG,CAAI,qCAAmC,wCAAyB,WAAwC,+BAAkC,CAAI,mBAAsB,EAAG,EAAG,uBAA2B,YAAa,eAAsB,GAAO,wDAA4D,uCAAqB,WAAuC,sGAA8C,wCAA2E,WAAwC,4CAA+C,EAAG,CAAI,wGAAuF,WAAwC,6CAAgD,EAAG,CAAI,yBAA4B,CAAI,uDAA+D,GAAO,+CAAmD,uCAAqB,WAAuC,wDAAuC,WAAwC,4CAA+C,EAAG,CAAI,iCAAyC,GAAO,8BAAkC,wCAAqB,WAAwC,6CAAgD,EAAG,CAAI,sDAAqC,WAAwC,uCAA0C,CAAI,4CAA+C,EAAG,CAAI,wDAAuC,WAAwC,uCAA0C,CAAI,2BAAmC,GAAO,8BAAkC,wCAAqB,WAAwC,6CAAgD,EAAG,EAAG,CAAI,mBAAsB,EAAG,CAAI,mBAAsB,EAAG,gBAAoB,kHAAyH,SAAe,WAAe,+EAA+F,2BAA8B,EAAG,CAAI,mEAAmF,2BAA8B,EAAG,EAAG,kBAAsB,UAAc,GAAO,iCAAqC,gCAAqC,WAAiB,WAAe,wDAAgE,GAAO,+BAAmC,wCAAqB,WAAwC,4BAA+B,EAAG,CAAI,4IAAoJ,GAAO,8BAAkC,wCAAqB,WAAwC,4BAA+B,EAAG,CAAI,kCAA0C,GAAO,8BAAkC,wCAAqB,WAAwC,4BAA+B,EAAG,EAAG,YAAkB,WAAe,4BAA+B,CAAI,0BAA6B,CAAI,mBAAsB,CAAI,0BAA6B,CAAI,wBAA2B,CAAI,8BAAiC,CAAI,6BAAgC,CAAI,gCAAmC,CAAI,gBAAmB,CAAI,eAAkB,CAAI,2BAA8B,CAAI,sBAAyB,CAAI,yBAA4B,CAAI,oCAAuC,CAAI,mBAAsB,EAAG,mBAAuB,uDAAsC,WAAwC,mBAAsB,CAAI,iBAAoB,CAAI,mBAAsB,CAAI,0BAA6B,CAAI,8BAAiC,CAAI,6BAAgC,CAAI,gCAAmC,CAAI,yHAAgI,CAAI,sBAAyB,CAAI,yBAA4B,CAAI,2BAA8B,CAAI,mBAAsB,EAAG,iBAAqB,8FAA6E,WAAwC,uBAA0B,EAAG,4BAAgC,2BAAmC,GAAO,6CAAiD,wCAAqB,WAAwC,uBAA0B,EAAG,qBAAyB,WAAe,yBAA4B,CAAI,+BAAkC,CAAI,mBAAsB,EAAG,uBAA2B,uDAAsC,WAAwC,qCAAwC,CAAI,sCAAkD,yDAAiE,GAAO,2CAA+C,uBAAiC,mCAA+C,+CAAkD,CAAI,mBAAsB,EAAG,CAAI,mBAAsB,EAAG,CAAI,gBAAgB,uBAAmC,iDAAoD,EAAG,EAAG,CAAI,mBAAsB,EAAG,oCAAwC,uDAAsC,WAAwC,qCAAwC,CAAI,sCAAkD,iDAAoD,CAAI,6BAAiC,WAAmB,8BAAiC,EAAG,EAAG,CAAI,mBAAsB,EAAG,qBAAyB,WAAe,2FAA8E,wCAAkC,WAAwC,gCAAmC,EAAG,EAAG,sCAA0C,YAAa,eAAsB,GAAO,oDAAwD,uBAAiC,mBAAsB,EAAG,wCAA4C,YAAa,eAAsB,GAAO,oDAAwD,uBAAiC,yCAA4C,CAAI,mBAAsB,EAAG,8BAAkC,YAAa,eAAsB,GAAO,sDAA0D,cAAgB,WAAmB,8BAAiC,EAAG,gCAAoC,qCAAiD,mCAA+C,gGAA2G,CAAI,mBAAsB,EAAG,CAAI,mBAAsB,EAAG,sCAA0C,gBAAgB,uBAAmC,uCAA0C,CAAI,+CAAkD,EAAG,wCAA4C,gBAAgB,uBAAmC,uCAA0C,CAAI,iDAAoD,EAAG,sBAA0B,WAAe,sCAAyC,uCAAoD,mBAAsB,EAAG,CAAI,uDAA+D,GAAO,2CAA+C,kBAAmB,aAAsB,GAAO,8BAAkC,WAAiB,uBAA0B,CAAI,oBAAuB,CAAI,uCAA0C,CAAI,uBAA0B,EAAG,CAAI,mBAAsB,EAAG,8BAAkC,2BAAmC,GAAO,8BAAkC,eAAgB,WAAoB,uBAA0B,EAAG,IAAU,6DAA4C,WAAwC,gCAAwC,GAAO,2BAA+B,kCAA4C,GAAO,2BAA+B,WAAiB,uBAA0B,EAAG,CAAI,oCAA4C,GAAO,2BAA+B,kCAA4C,GAAO,2BAA+B,WAAiB,uBAA0B,EAAG,CAAI,oCAA4C,GAAO,2BAA+B,wCAAqB,aAA0C,GAAO,2BAA+B,WAAiB,uBAA0B,EAAG,EAAG,SAAe,kCAAyC,eAAqB,eAAgB,eAAsB,GAAO,gDAAoD,UAAa,aAAoB,GAAO,8CAAkD,gCAA0C,uBAA0B,EAAG,KAAW,8DAA6C,WAAwC,iCAAyC,GAAO,2BAA+B,2CAAqB,WAA2C,gBAAgB,wCAAuB,WAAwC,YAAa,UAAc,WAAkB,6BAAgC,EAAG,CAAI,qBAAoB,wCAAwB,WAAwC,4BAA+B,EAAG,CAAI,mBAAsB,EAAG,CAAI,6BAAgC,CAAI,mBAAsB,EAAG,CAAI,gCAAwC,GAAO,2BAA+B,wCAAqB,WAAwC,uBAA0B,EAAG,EAAG,MAAY,2BAAmC,GAAO,yCAA6C,uBAAiC,GAAO,yCAA6C,WAAiB,uBAA0B,EAAG,iBAAqB,wDAAuC,WAAwC,iBAAoB,CAAI,4BAA+B,EAAG,kBAAsB,iDAAwD,QAAc,WAAe,uBAA0B,CAAI,oBAAuB,CAAI,oBAAuB,EAAG,kBAAsB,UAAc,GAAO,qCAAyC,yCAA8C,2BAA+B,uDAA+D,GAAO,qCAAyC,wCAAqB,WAAwC,4BAA+B,EAAG,QAAc,2BAAmC,GAAO,+CAAmD,uBAAiC,GAAO,+CAAmD,WAAiB,uBAA0B,EAAG,mBAAuB,wDAAuC,WAAwC,mBAAsB,CAAI,4BAA+B,EAAG,QAAc,WAAe,2DAA0C,WAAwC,8BAAsC,GAAO,uDAA2D,2CAAqD,GAAO,qDAAyD,0CAAoD,oEAA2E,CAAI,0BAA6B,EAAG,CAAI,4BAA+B,EAAG,CAAI,wDAAuC,WAAwC,0BAA6B,CAAI,4BAA+B,EAAG,CAAI,0EAAkF,GAAO,kCAAsC,wCAAqB,WAAwC,4BAA+B,EAAG,CAAI,0EAAkF,GAAO,mCAAuC,wCAAqB,WAAwC,4BAA+B,EAAG,CAAI,uGAA+G,GAAO,iCAAqC,wCAAqB,WAAwC,4BAA+B,EAAG,EAAG,iBAAqB,2BAAmC,GAAO,wDAA4D,uBAAiC,GAAO,sDAA0D,2CAAqD,oDAA2D,CAAI,0BAA6B,EAAG,YAAkB,cAAiB,eAAmB,4DAAoE,GAAO,2BAA+B,UAAa,WAAkB,uBAA0B,GAAK,yBAG9yf","sources":["webpack://_N_E/./node_modules/shiki/dist/langs/nix.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Nix\", \"fileTypes\": [\"nix\"], \"name\": \"nix\", \"patterns\": [{ \"include\": \"#expression\" }], \"repository\": { \"attribute-bind\": { \"patterns\": [{ \"include\": \"#attribute-name\" }, { \"include\": \"#attribute-bind-from-equals\" }] }, \"attribute-bind-from-equals\": { \"begin\": \"=\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.bind.nix\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.bind.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"attribute-inherit\": { \"begin\": \"\\\\binherit\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.inherit.nix\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.inherit.nix\" } }, \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.arguments.nix\" } }, \"end\": \"(?=\\\\;)\", \"patterns\": [{ \"begin\": \"\\\\)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.arguments.nix\" } }, \"end\": \"(?=\\\\;)\", \"patterns\": [{ \"include\": \"#bad-reserved\" }, { \"include\": \"#attribute-name-single\" }, { \"include\": \"#others\" }] }, { \"include\": \"#expression\" }] }, { \"begin\": \"(?=[a-zA-Z_])\", \"end\": \"(?=\\\\;)\", \"patterns\": [{ \"include\": \"#bad-reserved\" }, { \"include\": \"#attribute-name-single\" }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, \"attribute-name\": { \"patterns\": [{ \"match\": \"\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\", \"name\": \"entity.other.attribute-name.multipart.nix\" }, { \"match\": \"\\\\.\" }, { \"include\": \"#string-quoted\" }, { \"include\": \"#interpolation\" }] }, \"attribute-name-single\": { \"match\": \"\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\", \"name\": \"entity.other.attribute-name.single.nix\" }, \"attrset-contents\": { \"patterns\": [{ \"include\": \"#attribute-inherit\" }, { \"include\": \"#bad-reserved\" }, { \"include\": \"#attribute-bind\" }, { \"include\": \"#others\" }] }, \"attrset-definition\": { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset.nix\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset.nix\" } }, \"patterns\": [{ \"include\": \"#attrset-contents\" }] }, { \"begin\": \"(?<=\\\\})\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }] }, \"attrset-definition-brace-opened\": { \"patterns\": [{ \"begin\": \"(?<=\\\\})\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"(?=.?)\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset.nix\" } }, \"patterns\": [{ \"include\": \"#attrset-contents\" }] }] }, \"attrset-for-sure\": { \"patterns\": [{ \"begin\": \"(?=\\\\brec\\\\b)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\brec\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#others\" }] }, { \"include\": \"#attrset-definition\" }, { \"include\": \"#others\" }] }, { \"begin\": \"(?=\\\\{\\\\s*(\\\\}|[^,?]*(=|;)))\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attrset-definition\" }, { \"include\": \"#others\" }] }] }, \"attrset-or-function\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset-or-function.nix\" } }, \"end\": \"(?=([\\\\])};]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": `(?=(\\\\s*\\\\}|\\\\\"|\\\\binherit\\\\b|\\\\$\\\\{|\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*(\\\\s*\\\\.|\\\\s*=[^=])))`, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attrset-definition-brace-opened\" }] }, { \"begin\": \"(?=(\\\\.\\\\.\\\\.|\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\\\\s*[,?]))\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition-brace-opened\" }] }, { \"include\": \"#bad-reserved\" }, { \"begin\": \"\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.function.maybe.nix\" } }, \"end\": \"(?=([\\\\])};]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"(?=\\\\.)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attrset-definition-brace-opened\" }] }, { \"begin\": \"\\\\s*(\\\\,)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition-brace-opened\" }] }, { \"begin\": \"(?==)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attribute-bind-from-equals\" }, { \"include\": \"#attrset-definition-brace-opened\" }] }, { \"begin\": \"(?=\\\\?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-parameter-default\" }, { \"begin\": \"\\\\,\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition-brace-opened\" }] }] }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, \"bad-reserved\": { \"match\": \"(?<![\\\\w'-])(if|then|else|assert|with|let|in|rec|inherit)(?![\\\\w'-])\", \"name\": \"invalid.illegal.reserved.nix\" }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*([^*]|\\\\*[^\\\\/])*\", \"end\": \"\\\\*\\\\/\", \"name\": \"comment.block.nix\", \"patterns\": [{ \"include\": \"#comment-remark\" }] }, { \"begin\": \"\\\\#\", \"end\": \"$\", \"name\": \"comment.line.number-sign.nix\", \"patterns\": [{ \"include\": \"#comment-remark\" }] }] }, \"comment-remark\": { \"captures\": { \"1\": { \"name\": \"markup.bold.comment.nix\" } }, \"match\": \"(TODO|FIXME|BUG|!!!):?\" }, \"constants\": { \"patterns\": [{ \"begin\": \"\\\\b(builtins|true|false|null)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"constant.language.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"\\\\b(scopedImport|import|isNull|abort|throw|baseNameOf|dirOf|removeAttrs|map|toString|derivationStrict|derivation)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"\\\\b\\\\d+\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"constant.numeric.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#parens-and-cont\" }, { \"include\": \"#list-and-cont\" }, { \"include\": \"#string\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#with-assert\" }, { \"include\": \"#function-for-sure\" }, { \"include\": \"#attrset-for-sure\" }, { \"include\": \"#attrset-or-function\" }, { \"include\": \"#let\" }, { \"include\": \"#if\" }, { \"include\": \"#operator-unary\" }, { \"include\": \"#constants\" }, { \"include\": \"#bad-reserved\" }, { \"include\": \"#parameter-name-and-cont\" }, { \"include\": \"#others\" }] }, \"expression-cont\": { \"begin\": \"(?=.?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#list\" }, { \"include\": \"#string\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#function-for-sure\" }, { \"include\": \"#attrset-for-sure\" }, { \"include\": \"#attrset-or-function\" }, { \"match\": \"(\\\\bor\\\\b|\\\\.|==|!=|!|<=|<|>=|>|&&|\\\\|\\\\||->|//|\\\\?|\\\\+\\\\+|-|\\\\*|/(?=([^*]|$))|\\\\+)\", \"name\": \"keyword.operator.nix\" }, { \"include\": \"#constants\" }, { \"include\": \"#bad-reserved\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#others\" }] }, \"function-body\": { \"begin\": \"(@\\\\s*([a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*)\\\\s*)?(:)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"function-body-from-colon\": { \"begin\": \"(:)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.function.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"function-contents\": { \"patterns\": [{ \"include\": \"#bad-reserved\" }, { \"include\": \"#function-parameter\" }, { \"include\": \"#others\" }] }, \"function-definition\": { \"begin\": \"(?=.?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-body-from-colon\" }, { \"begin\": \"(?=.?)\", \"end\": \"(?=:)\", \"patterns\": [{ \"begin\": \"(\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.function.4.nix\" } }, \"end\": \"(?=:)\", \"patterns\": [{ \"begin\": \"\\\\@\", \"end\": \"(?=:)\", \"patterns\": [{ \"include\": \"#function-header-until-colon-no-arg\" }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=:)\", \"patterns\": [{ \"include\": \"#function-header-until-colon-with-arg\" }] }] }, { \"include\": \"#others\" }] }, \"function-definition-brace-opened\": { \"begin\": \"(?=.?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-body-from-colon\" }, { \"begin\": \"(?=.?)\", \"end\": \"(?=:)\", \"patterns\": [{ \"include\": \"#function-header-close-brace-with-arg\" }, { \"begin\": \"(?=.?)\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#function-contents\" }] }] }, { \"include\": \"#others\" }] }, \"function-for-sure\": { \"patterns\": [{ \"begin\": `(?=(\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\\\\s*[:@]|\\\\{[^}]*\\\\}\\\\s*:|\\\\{[^#}\"'/=]*[,?]))`, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition\" }] }] }, \"function-header-close-brace-no-arg\": { \"begin\": \"\\\\}\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.function.nix\" } }, \"end\": \"(?=:)\", \"patterns\": [{ \"include\": \"#others\" }] }, \"function-header-close-brace-with-arg\": { \"begin\": \"\\\\}\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.function.nix\" } }, \"end\": \"(?=:)\", \"patterns\": [{ \"include\": \"#function-header-terminal-arg\" }, { \"include\": \"#others\" }] }, \"function-header-open-brace\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.function.2.nix\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#function-contents\" }] }, \"function-header-terminal-arg\": { \"begin\": \"(?=@)\", \"end\": \"(?=:)\", \"patterns\": [{ \"begin\": \"\\\\@\", \"end\": \"(?=:)\", \"patterns\": [{ \"begin\": \"(\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*)\", \"end\": \"(?=:)\", \"name\": \"variable.parameter.function.3.nix\" }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, \"function-header-until-colon-no-arg\": { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=:)\", \"patterns\": [{ \"include\": \"#function-header-open-brace\" }, { \"include\": \"#function-header-close-brace-no-arg\" }] }, \"function-header-until-colon-with-arg\": { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=:)\", \"patterns\": [{ \"include\": \"#function-header-open-brace\" }, { \"include\": \"#function-header-close-brace-with-arg\" }] }, \"function-parameter\": { \"patterns\": [{ \"begin\": \"(\\\\.\\\\.\\\\.)\", \"end\": \"(,|(?=\\\\}))\", \"name\": \"keyword.operator.nix\", \"patterns\": [{ \"include\": \"#others\" }] }, { \"begin\": \"\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.function.1.nix\" } }, \"end\": \"(,|(?=\\\\}))\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.nix\" } }, \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#function-parameter-default\" }, { \"include\": \"#expression\" }] }, { \"include\": \"#others\" }] }, \"function-parameter-default\": { \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.nix\" } }, \"end\": \"(?=[,}])\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"if\": { \"begin\": \"(?=\\\\bif\\\\b)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\bif\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"\\\\bth(?=en\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=th)en\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"\\\\bel(?=se\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=el)se\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"endCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"illegal\": { \"match\": \".\", \"name\": \"invalid.illegal\" }, \"interpolation\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.nix\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nix\" } }, \"name\": \"meta.embedded\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"let\": { \"begin\": \"(?=\\\\blet\\\\b)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\blet\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(in|else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"(?=\\\\{)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#attrset-contents\" }] }, { \"begin\": \"(^|(?<=\\\\}))\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"include\": \"#others\" }] }, { \"include\": \"#attrset-contents\" }, { \"include\": \"#others\" }] }, { \"begin\": \"\\\\bin\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"list\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.list.nix\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.list.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"list-and-cont\": { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#list\" }, { \"include\": \"#expression-cont\" }] }, \"operator-unary\": { \"match\": \"(!|-)\", \"name\": \"keyword.operator.unary.nix\" }, \"others\": { \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#illegal\" }] }, \"parameter-name\": { \"captures\": { \"0\": { \"name\": \"variable.parameter.name.nix\" } }, \"match\": \"\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\" }, \"parameter-name-and-cont\": { \"begin\": \"\\\\b[a-zA-Z_][a-zA-Z0-9_\\\\'\\\\-]*\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.name.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, \"parens\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.expression.nix\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.expression.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"parens-and-cont\": { \"begin\": \"(?=\\\\()\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#expression-cont\" }] }, \"string\": { \"patterns\": [{ \"begin\": \"(?=\\\\'\\\\')\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\'\\\\'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.other.start.nix\" } }, \"end\": \"\\\\'\\\\'(?!\\\\$|\\\\'|\\\\\\\\.)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.other.end.nix\" } }, \"name\": \"string.quoted.other.nix\", \"patterns\": [{ \"match\": \"\\\\'\\\\'(\\\\$|\\\\'|\\\\\\\\.)\", \"name\": \"constant.character.escape.nix\" }, { \"include\": \"#interpolation\" }] }, { \"include\": \"#expression-cont\" }] }, { \"begin\": '(?=\\\\\")', \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#string-quoted\" }, { \"include\": \"#expression-cont\" }] }, { \"begin\": \"(~?[a-zA-Z0-9\\\\._\\\\-+]*(\\\\/[a-zA-Z0-9\\\\._\\\\-+]+)+)\", \"beginCaptures\": { \"0\": { \"name\": \"string.unquoted.path.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"(<[a-zA-Z0-9\\\\._\\\\-+]+(\\\\/[a-zA-Z0-9\\\\._\\\\-+]+)*>)\", \"beginCaptures\": { \"0\": { \"name\": \"string.unquoted.spath.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"([a-zA-Z][a-zA-Z0-9+\\\\-\\\\.]*:[a-zA-Z0-9\\\\%\\\\/?:\\\\@\\\\&=+$\\\\,\\\\-_\\\\.!\\\\~\\\\*\\\\']+)\", \"beginCaptures\": { \"0\": { \"name\": \"string.unquoted.url.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }] }, \"string-quoted\": { \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.double.start.nix\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.double.end.nix\" } }, \"name\": \"string.quoted.double.nix\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.nix\" }, { \"include\": \"#interpolation\" }] }, \"whitespace\": { \"match\": \"\\\\s+\" }, \"with-assert\": { \"begin\": \"(?<![\\\\w'-])(with|assert)(?![\\\\w'-])\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"\\\\;\", \"patterns\": [{ \"include\": \"#expression\" }] } }, \"scopeName\": \"source.nix\" });\nvar nix = [\n  lang\n];\n\nexport { nix as default };\n"],"names":["nix","Object","freeze"],"sourceRoot":""}